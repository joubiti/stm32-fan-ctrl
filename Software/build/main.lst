ARM GAS  /tmp/ccbFYdvV.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB315:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccbFYdvV.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  44:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM3_Init(void);
  56:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  57:Core/Src/main.c **** static void MX_TIM1_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** static heartbeat_led_t heartbeat_led;
  65:Core/Src/main.c **** static tachometer_t fan_tachometer;
  66:Core/Src/main.c **** static volatile uint8_t cnt = 3;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccbFYdvV.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_TIM3_Init();
 102:Core/Src/main.c ****   MX_USART1_UART_Init();
 103:Core/Src/main.c ****   MX_TIM1_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /*****************   Initialize logging subsystem, mapped to UART1 **************/
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   logging_subsystem_init(&huart1);
 110:Core/Src/main.c ****   logging_set_message_frequency(2000);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /*****************    Initialize heartbeat LED (1 Hz)           *****************/
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   heartbeat_initialize(&heartbeat_led, 1000);
 115:Core/Src/main.c ****   heartbeat_on(&heartbeat_led);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /*****************   Fan DC speed sensor (Tachometer)   *****************************************
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   tachometer_init(&fan_tachometer, &htim3, 100);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Infinite loop */
 126:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 127:Core/Src/main.c ****   while (1)
 128:Core/Src/main.c ****   {
 129:Core/Src/main.c ****     /* USER CODE END WHILE */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     heartbeat_toggle(&heartbeat_led, HAL_GetTick());
 134:Core/Src/main.c ****     tachometer_update_rpm(&fan_tachometer, HAL_GetTick());
 135:Core/Src/main.c ****     logging_send_periodic_msg(HAL_GetTick(), "Fan RPM: %d \n", fan_tachometer.current_rpm);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  /tmp/ccbFYdvV.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 156:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 167:Core/Src/main.c ****   {
 168:Core/Src/main.c ****     Error_Handler();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 187:Core/Src/main.c ****   * @param None
 188:Core/Src/main.c ****   * @retval None
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c **** static void MX_TIM1_Init(void)
 191:Core/Src/main.c **** {
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 198:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 199:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 204:Core/Src/main.c ****   htim1.Instance = TIM1;
ARM GAS  /tmp/ccbFYdvV.s 			page 5


 205:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 206:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 207:Core/Src/main.c ****   htim1.Init.Period = 65535;
 208:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 209:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 210:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 211:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 216:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 217:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 218:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 223:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 224:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 225:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 226:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 227:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 228:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 229:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 234:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 235:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 236:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 237:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 238:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 239:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 240:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 241:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 242:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 243:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 244:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 245:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 246:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 253:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** }
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** /**
 258:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 259:Core/Src/main.c ****   * @param None
 260:Core/Src/main.c ****   * @retval None
 261:Core/Src/main.c ****   */
ARM GAS  /tmp/ccbFYdvV.s 			page 6


 262:Core/Src/main.c **** static void MX_TIM3_Init(void)
 263:Core/Src/main.c **** {
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 270:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 275:Core/Src/main.c ****   htim3.Instance = TIM3;
 276:Core/Src/main.c ****   htim3.Init.Prescaler = 63;
 277:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 278:Core/Src/main.c ****   htim3.Init.Period = 0xFFFF;
 279:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 280:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 281:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 286:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 287:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 292:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 293:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 294:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 295:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** }
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /**
 306:Core/Src/main.c ****   * @brief USART1 Initialization Function
 307:Core/Src/main.c ****   * @param None
 308:Core/Src/main.c ****   * @retval None
 309:Core/Src/main.c ****   */
 310:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 311:Core/Src/main.c **** {
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 318:Core/Src/main.c **** 
ARM GAS  /tmp/ccbFYdvV.s 			page 7


 319:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 320:Core/Src/main.c ****   huart1.Instance = USART1;
 321:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 322:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 323:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 324:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 325:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 326:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 327:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 328:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 329:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 330:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 331:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     Error_Handler();
 342:Core/Src/main.c ****   }
 343:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 344:Core/Src/main.c ****   {
 345:Core/Src/main.c ****     Error_Handler();
 346:Core/Src/main.c ****   }
 347:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** /**
 354:Core/Src/main.c ****   * @brief GPIO Initialization Function
 355:Core/Src/main.c ****   * @param None
 356:Core/Src/main.c ****   * @retval None
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c **** static void MX_GPIO_Init(void)
 359:Core/Src/main.c **** {
  26              		.loc 1 359 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 64
 360:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccbFYdvV.s 			page 8


  41              		.loc 1 360 3 view .LVU1
  42              		.loc 1 360 20 is_stmt 0 view .LVU2
  43 0004 05AC     		add	r4, sp, #20
  44 0006 1422     		movs	r2, #20
  45 0008 0021     		movs	r1, #0
  46 000a 2000     		movs	r0, r4
  47 000c FFF7FEFF 		bl	memset
  48              	.LVL0:
 361:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 366:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  49              		.loc 1 366 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 366 3 view .LVU4
  52              		.loc 1 366 3 view .LVU5
  53 0010 194B     		ldr	r3, .L2
  54 0012 596B     		ldr	r1, [r3, #52]
  55 0014 2022     		movs	r2, #32
  56 0016 1143     		orrs	r1, r2
  57 0018 5963     		str	r1, [r3, #52]
  58              		.loc 1 366 3 view .LVU6
  59 001a 596B     		ldr	r1, [r3, #52]
  60 001c 0A40     		ands	r2, r1
  61 001e 0192     		str	r2, [sp, #4]
  62              		.loc 1 366 3 view .LVU7
  63 0020 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 366 3 view .LVU8
 367:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 367 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 367 3 view .LVU10
  69              		.loc 1 367 3 view .LVU11
  70 0022 596B     		ldr	r1, [r3, #52]
  71 0024 0422     		movs	r2, #4
  72 0026 1143     		orrs	r1, r2
  73 0028 5963     		str	r1, [r3, #52]
  74              		.loc 1 367 3 view .LVU12
  75 002a 596B     		ldr	r1, [r3, #52]
  76 002c 0A40     		ands	r2, r1
  77 002e 0292     		str	r2, [sp, #8]
  78              		.loc 1 367 3 view .LVU13
  79 0030 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 367 3 view .LVU14
 368:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 368 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 368 3 view .LVU16
  85              		.loc 1 368 3 view .LVU17
  86 0032 596B     		ldr	r1, [r3, #52]
  87 0034 0222     		movs	r2, #2
  88 0036 1143     		orrs	r1, r2
  89 0038 5963     		str	r1, [r3, #52]
ARM GAS  /tmp/ccbFYdvV.s 			page 9


  90              		.loc 1 368 3 view .LVU18
  91 003a 596B     		ldr	r1, [r3, #52]
  92 003c 0A40     		ands	r2, r1
  93 003e 0392     		str	r2, [sp, #12]
  94              		.loc 1 368 3 view .LVU19
  95 0040 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 368 3 view .LVU20
 369:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  98              		.loc 1 369 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 369 3 view .LVU22
 101              		.loc 1 369 3 view .LVU23
 102 0042 5A6B     		ldr	r2, [r3, #52]
 103 0044 0125     		movs	r5, #1
 104 0046 2A43     		orrs	r2, r5
 105 0048 5A63     		str	r2, [r3, #52]
 106              		.loc 1 369 3 view .LVU24
 107 004a 5B6B     		ldr	r3, [r3, #52]
 108 004c 2B40     		ands	r3, r5
 109 004e 0493     		str	r3, [sp, #16]
 110              		.loc 1 369 3 view .LVU25
 111 0050 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 369 3 view .LVU26
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 372:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 114              		.loc 1 372 3 view .LVU27
 115 0052 8027     		movs	r7, #128
 116 0054 BF01     		lsls	r7, r7, #6
 117 0056 094E     		ldr	r6, .L2+4
 118 0058 0022     		movs	r2, #0
 119 005a 3900     		movs	r1, r7
 120 005c 3000     		movs	r0, r6
 121 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL1:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /*Configure GPIO pin : PB13 */
 375:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 123              		.loc 1 375 3 view .LVU28
 124              		.loc 1 375 23 is_stmt 0 view .LVU29
 125 0062 0597     		str	r7, [sp, #20]
 376:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 376 3 is_stmt 1 view .LVU30
 127              		.loc 1 376 24 is_stmt 0 view .LVU31
 128 0064 0695     		str	r5, [sp, #24]
 377:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 377 3 is_stmt 1 view .LVU32
 130              		.loc 1 377 24 is_stmt 0 view .LVU33
 131 0066 0023     		movs	r3, #0
 132 0068 0793     		str	r3, [sp, #28]
 378:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 133              		.loc 1 378 3 is_stmt 1 view .LVU34
 134              		.loc 1 378 25 is_stmt 0 view .LVU35
 135 006a 0893     		str	r3, [sp, #32]
 379:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccbFYdvV.s 			page 10


 136              		.loc 1 379 3 is_stmt 1 view .LVU36
 137 006c 2100     		movs	r1, r4
 138 006e 3000     		movs	r0, r6
 139 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL2:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 384:Core/Src/main.c **** }
 141              		.loc 1 384 1 is_stmt 0 view .LVU37
 142 0074 0BB0     		add	sp, sp, #44
 143              		@ sp needed
 144 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 145              	.L3:
 146              		.align	2
 147              	.L2:
 148 0078 00100240 		.word	1073876992
 149 007c 00040050 		.word	1342178304
 150              		.cfi_endproc
 151              	.LFE315:
 153              		.section	.text.Error_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	Error_Handler
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 160              	Error_Handler:
 161              	.LFB316:
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** /* USER CODE END 4 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /**
 391:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 392:Core/Src/main.c ****   * @retval None
 393:Core/Src/main.c ****   */
 394:Core/Src/main.c **** void Error_Handler(void)
 395:Core/Src/main.c **** {
 162              		.loc 1 395 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ Volatile: function does not return.
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 396:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 397:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 398:Core/Src/main.c ****   __disable_irq();
 168              		.loc 1 398 3 view .LVU39
 169              	.LBB8:
 170              	.LBI8:
 171              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
ARM GAS  /tmp/ccbFYdvV.s 			page 11


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /tmp/ccbFYdvV.s 			page 12


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccbFYdvV.s 			page 13


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccbFYdvV.s 			page 14


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 172              		.loc 2 207 27 view .LVU40
 173              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 174              		.loc 2 209 3 view .LVU41
 175              		.syntax divided
 176              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 177 0000 72B6     		cpsid i
 178              	@ 0 "" 2
 179              		.thumb
 180              		.syntax unified
 181              	.L5:
 182              	.LBE9:
 183              	.LBE8:
 399:Core/Src/main.c ****   while (1)
 184              		.loc 1 399 3 view .LVU42
 400:Core/Src/main.c ****   {
 401:Core/Src/main.c ****   }
 185              		.loc 1 401 3 view .LVU43
 399:Core/Src/main.c ****   while (1)
 186              		.loc 1 399 9 view .LVU44
 187 0002 FEE7     		b	.L5
 188              		.cfi_endproc
 189              	.LFE316:
 191              		.section	.text.MX_TIM3_Init,"ax",%progbits
ARM GAS  /tmp/ccbFYdvV.s 			page 15


 192              		.align	1
 193              		.syntax unified
 194              		.code	16
 195              		.thumb_func
 197              	MX_TIM3_Init:
 198              	.LFB313:
 263:Core/Src/main.c **** 
 199              		.loc 1 263 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 32
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 00B5     		push	{lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 14, -4
 207 0002 89B0     		sub	sp, sp, #36
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 40
 269:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 210              		.loc 1 269 3 view .LVU46
 269:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 211              		.loc 1 269 27 is_stmt 0 view .LVU47
 212 0004 0C22     		movs	r2, #12
 213 0006 0021     		movs	r1, #0
 214 0008 05A8     		add	r0, sp, #20
 215 000a FFF7FEFF 		bl	memset
 216              	.LVL3:
 270:Core/Src/main.c **** 
 217              		.loc 1 270 3 is_stmt 1 view .LVU48
 270:Core/Src/main.c **** 
 218              		.loc 1 270 22 is_stmt 0 view .LVU49
 219 000e 1022     		movs	r2, #16
 220 0010 0021     		movs	r1, #0
 221 0012 01A8     		add	r0, sp, #4
 222 0014 FFF7FEFF 		bl	memset
 223              	.LVL4:
 275:Core/Src/main.c ****   htim3.Init.Prescaler = 63;
 224              		.loc 1 275 3 is_stmt 1 view .LVU50
 275:Core/Src/main.c ****   htim3.Init.Prescaler = 63;
 225              		.loc 1 275 18 is_stmt 0 view .LVU51
 226 0018 1648     		ldr	r0, .L13
 227 001a 174B     		ldr	r3, .L13+4
 228 001c 0360     		str	r3, [r0]
 276:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 229              		.loc 1 276 3 is_stmt 1 view .LVU52
 276:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 230              		.loc 1 276 24 is_stmt 0 view .LVU53
 231 001e 3F23     		movs	r3, #63
 232 0020 4360     		str	r3, [r0, #4]
 277:Core/Src/main.c ****   htim3.Init.Period = 0xFFFF;
 233              		.loc 1 277 3 is_stmt 1 view .LVU54
 277:Core/Src/main.c ****   htim3.Init.Period = 0xFFFF;
 234              		.loc 1 277 26 is_stmt 0 view .LVU55
 235 0022 0023     		movs	r3, #0
 236 0024 8360     		str	r3, [r0, #8]
 278:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 237              		.loc 1 278 3 is_stmt 1 view .LVU56
ARM GAS  /tmp/ccbFYdvV.s 			page 16


 278:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 238              		.loc 1 278 21 is_stmt 0 view .LVU57
 239 0026 154A     		ldr	r2, .L13+8
 240 0028 C260     		str	r2, [r0, #12]
 279:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 241              		.loc 1 279 3 is_stmt 1 view .LVU58
 279:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 242              		.loc 1 279 28 is_stmt 0 view .LVU59
 243 002a 0361     		str	r3, [r0, #16]
 280:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 244              		.loc 1 280 3 is_stmt 1 view .LVU60
 280:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 245              		.loc 1 280 32 is_stmt 0 view .LVU61
 246 002c 8361     		str	r3, [r0, #24]
 281:Core/Src/main.c ****   {
 247              		.loc 1 281 3 is_stmt 1 view .LVU62
 281:Core/Src/main.c ****   {
 248              		.loc 1 281 7 is_stmt 0 view .LVU63
 249 002e FFF7FEFF 		bl	HAL_TIM_IC_Init
 250              	.LVL5:
 281:Core/Src/main.c ****   {
 251              		.loc 1 281 6 discriminator 1 view .LVU64
 252 0032 0028     		cmp	r0, #0
 253 0034 17D1     		bne	.L10
 285:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 254              		.loc 1 285 3 is_stmt 1 view .LVU65
 285:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 255              		.loc 1 285 37 is_stmt 0 view .LVU66
 256 0036 05A9     		add	r1, sp, #20
 257 0038 0023     		movs	r3, #0
 258 003a 0593     		str	r3, [sp, #20]
 286:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 259              		.loc 1 286 3 is_stmt 1 view .LVU67
 286:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 260              		.loc 1 286 33 is_stmt 0 view .LVU68
 261 003c 8B60     		str	r3, [r1, #8]
 287:Core/Src/main.c ****   {
 262              		.loc 1 287 3 is_stmt 1 view .LVU69
 287:Core/Src/main.c ****   {
 263              		.loc 1 287 7 is_stmt 0 view .LVU70
 264 003e 0D48     		ldr	r0, .L13
 265 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 266              	.LVL6:
 287:Core/Src/main.c ****   {
 267              		.loc 1 287 6 discriminator 1 view .LVU71
 268 0044 0028     		cmp	r0, #0
 269 0046 10D1     		bne	.L11
 291:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 270              		.loc 1 291 3 is_stmt 1 view .LVU72
 291:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 271              		.loc 1 291 24 is_stmt 0 view .LVU73
 272 0048 01A9     		add	r1, sp, #4
 273 004a 0023     		movs	r3, #0
 274 004c 0193     		str	r3, [sp, #4]
 292:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 275              		.loc 1 292 3 is_stmt 1 view .LVU74
 292:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
ARM GAS  /tmp/ccbFYdvV.s 			page 17


 276              		.loc 1 292 25 is_stmt 0 view .LVU75
 277 004e 0122     		movs	r2, #1
 278 0050 4A60     		str	r2, [r1, #4]
 293:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 279              		.loc 1 293 3 is_stmt 1 view .LVU76
 293:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 280              		.loc 1 293 25 is_stmt 0 view .LVU77
 281 0052 8B60     		str	r3, [r1, #8]
 294:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 282              		.loc 1 294 3 is_stmt 1 view .LVU78
 294:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 283              		.loc 1 294 22 is_stmt 0 view .LVU79
 284 0054 CB60     		str	r3, [r1, #12]
 295:Core/Src/main.c ****   {
 285              		.loc 1 295 3 is_stmt 1 view .LVU80
 295:Core/Src/main.c ****   {
 286              		.loc 1 295 7 is_stmt 0 view .LVU81
 287 0056 0748     		ldr	r0, .L13
 288 0058 0332     		adds	r2, r2, #3
 289 005a FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 290              	.LVL7:
 295:Core/Src/main.c ****   {
 291              		.loc 1 295 6 discriminator 1 view .LVU82
 292 005e 0028     		cmp	r0, #0
 293 0060 05D1     		bne	.L12
 303:Core/Src/main.c **** 
 294              		.loc 1 303 1 view .LVU83
 295 0062 09B0     		add	sp, sp, #36
 296              		@ sp needed
 297 0064 00BD     		pop	{pc}
 298              	.L10:
 283:Core/Src/main.c ****   }
 299              		.loc 1 283 5 is_stmt 1 view .LVU84
 300 0066 FFF7FEFF 		bl	Error_Handler
 301              	.LVL8:
 302              	.L11:
 289:Core/Src/main.c ****   }
 303              		.loc 1 289 5 view .LVU85
 304 006a FFF7FEFF 		bl	Error_Handler
 305              	.LVL9:
 306              	.L12:
 297:Core/Src/main.c ****   }
 307              		.loc 1 297 5 view .LVU86
 308 006e FFF7FEFF 		bl	Error_Handler
 309              	.LVL10:
 310              	.L14:
 311 0072 C046     		.align	2
 312              	.L13:
 313 0074 00000000 		.word	htim3
 314 0078 00040040 		.word	1073742848
 315 007c FFFF0000 		.word	65535
 316              		.cfi_endproc
 317              	.LFE313:
 319              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.code	16
ARM GAS  /tmp/ccbFYdvV.s 			page 18


 323              		.thumb_func
 325              	MX_USART1_UART_Init:
 326              	.LFB314:
 311:Core/Src/main.c **** 
 327              		.loc 1 311 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 10B5     		push	{r4, lr}
 332              	.LCFI4:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 320:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 336              		.loc 1 320 3 view .LVU88
 320:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 337              		.loc 1 320 19 is_stmt 0 view .LVU89
 338 0002 1748     		ldr	r0, .L24
 339 0004 174B     		ldr	r3, .L24+4
 340 0006 0360     		str	r3, [r0]
 321:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 341              		.loc 1 321 3 is_stmt 1 view .LVU90
 321:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 342              		.loc 1 321 24 is_stmt 0 view .LVU91
 343 0008 E123     		movs	r3, #225
 344 000a 5B02     		lsls	r3, r3, #9
 345 000c 4360     		str	r3, [r0, #4]
 322:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 346              		.loc 1 322 3 is_stmt 1 view .LVU92
 322:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 347              		.loc 1 322 26 is_stmt 0 view .LVU93
 348 000e 0023     		movs	r3, #0
 349 0010 8360     		str	r3, [r0, #8]
 323:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 350              		.loc 1 323 3 is_stmt 1 view .LVU94
 323:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 351              		.loc 1 323 24 is_stmt 0 view .LVU95
 352 0012 C360     		str	r3, [r0, #12]
 324:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 353              		.loc 1 324 3 is_stmt 1 view .LVU96
 324:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 354              		.loc 1 324 22 is_stmt 0 view .LVU97
 355 0014 0361     		str	r3, [r0, #16]
 325:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 356              		.loc 1 325 3 is_stmt 1 view .LVU98
 325:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 357              		.loc 1 325 20 is_stmt 0 view .LVU99
 358 0016 0C22     		movs	r2, #12
 359 0018 4261     		str	r2, [r0, #20]
 326:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 360              		.loc 1 326 3 is_stmt 1 view .LVU100
 326:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 361              		.loc 1 326 25 is_stmt 0 view .LVU101
 362 001a 8361     		str	r3, [r0, #24]
 327:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 363              		.loc 1 327 3 is_stmt 1 view .LVU102
 327:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  /tmp/ccbFYdvV.s 			page 19


 364              		.loc 1 327 28 is_stmt 0 view .LVU103
 365 001c C361     		str	r3, [r0, #28]
 328:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 366              		.loc 1 328 3 is_stmt 1 view .LVU104
 328:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 367              		.loc 1 328 30 is_stmt 0 view .LVU105
 368 001e 0362     		str	r3, [r0, #32]
 329:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 369              		.loc 1 329 3 is_stmt 1 view .LVU106
 329:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 370              		.loc 1 329 30 is_stmt 0 view .LVU107
 371 0020 4362     		str	r3, [r0, #36]
 330:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 372              		.loc 1 330 3 is_stmt 1 view .LVU108
 330:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 373              		.loc 1 330 38 is_stmt 0 view .LVU109
 374 0022 8362     		str	r3, [r0, #40]
 331:Core/Src/main.c ****   {
 375              		.loc 1 331 3 is_stmt 1 view .LVU110
 331:Core/Src/main.c ****   {
 376              		.loc 1 331 7 is_stmt 0 view .LVU111
 377 0024 FFF7FEFF 		bl	HAL_UART_Init
 378              	.LVL11:
 331:Core/Src/main.c ****   {
 379              		.loc 1 331 6 discriminator 1 view .LVU112
 380 0028 0028     		cmp	r0, #0
 381 002a 11D1     		bne	.L20
 335:Core/Src/main.c ****   {
 382              		.loc 1 335 3 is_stmt 1 view .LVU113
 335:Core/Src/main.c ****   {
 383              		.loc 1 335 7 is_stmt 0 view .LVU114
 384 002c 0C48     		ldr	r0, .L24
 385 002e 0021     		movs	r1, #0
 386 0030 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 387              	.LVL12:
 335:Core/Src/main.c ****   {
 388              		.loc 1 335 6 discriminator 1 view .LVU115
 389 0034 0028     		cmp	r0, #0
 390 0036 0DD1     		bne	.L21
 339:Core/Src/main.c ****   {
 391              		.loc 1 339 3 is_stmt 1 view .LVU116
 339:Core/Src/main.c ****   {
 392              		.loc 1 339 7 is_stmt 0 view .LVU117
 393 0038 0948     		ldr	r0, .L24
 394 003a 0021     		movs	r1, #0
 395 003c FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 396              	.LVL13:
 339:Core/Src/main.c ****   {
 397              		.loc 1 339 6 discriminator 1 view .LVU118
 398 0040 0028     		cmp	r0, #0
 399 0042 09D1     		bne	.L22
 343:Core/Src/main.c ****   {
 400              		.loc 1 343 3 is_stmt 1 view .LVU119
 343:Core/Src/main.c ****   {
 401              		.loc 1 343 7 is_stmt 0 view .LVU120
 402 0044 0648     		ldr	r0, .L24
 403 0046 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
ARM GAS  /tmp/ccbFYdvV.s 			page 20


 404              	.LVL14:
 343:Core/Src/main.c ****   {
 405              		.loc 1 343 6 discriminator 1 view .LVU121
 406 004a 0028     		cmp	r0, #0
 407 004c 06D1     		bne	.L23
 351:Core/Src/main.c **** 
 408              		.loc 1 351 1 view .LVU122
 409              		@ sp needed
 410 004e 10BD     		pop	{r4, pc}
 411              	.L20:
 333:Core/Src/main.c ****   }
 412              		.loc 1 333 5 is_stmt 1 view .LVU123
 413 0050 FFF7FEFF 		bl	Error_Handler
 414              	.LVL15:
 415              	.L21:
 337:Core/Src/main.c ****   }
 416              		.loc 1 337 5 view .LVU124
 417 0054 FFF7FEFF 		bl	Error_Handler
 418              	.LVL16:
 419              	.L22:
 341:Core/Src/main.c ****   }
 420              		.loc 1 341 5 view .LVU125
 421 0058 FFF7FEFF 		bl	Error_Handler
 422              	.LVL17:
 423              	.L23:
 345:Core/Src/main.c ****   }
 424              		.loc 1 345 5 view .LVU126
 425 005c FFF7FEFF 		bl	Error_Handler
 426              	.LVL18:
 427              	.L25:
 428              		.align	2
 429              	.L24:
 430 0060 00000000 		.word	huart1
 431 0064 00380140 		.word	1073821696
 432              		.cfi_endproc
 433              	.LFE314:
 435              		.section	.text.MX_TIM1_Init,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.code	16
 439              		.thumb_func
 441              	MX_TIM1_Init:
 442              	.LFB312:
 191:Core/Src/main.c **** 
 443              		.loc 1 191 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 96
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 00B5     		push	{lr}
 448              	.LCFI5:
 449              		.cfi_def_cfa_offset 4
 450              		.cfi_offset 14, -4
 451 0002 99B0     		sub	sp, sp, #100
 452              	.LCFI6:
 453              		.cfi_def_cfa_offset 104
 197:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 454              		.loc 1 197 3 view .LVU128
ARM GAS  /tmp/ccbFYdvV.s 			page 21


 197:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 455              		.loc 1 197 27 is_stmt 0 view .LVU129
 456 0004 0C22     		movs	r2, #12
 457 0006 0021     		movs	r1, #0
 458 0008 15A8     		add	r0, sp, #84
 459 000a FFF7FEFF 		bl	memset
 460              	.LVL19:
 198:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 461              		.loc 1 198 3 is_stmt 1 view .LVU130
 198:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 462              		.loc 1 198 22 is_stmt 0 view .LVU131
 463 000e 1C22     		movs	r2, #28
 464 0010 0021     		movs	r1, #0
 465 0012 0EA8     		add	r0, sp, #56
 466 0014 FFF7FEFF 		bl	memset
 467              	.LVL20:
 199:Core/Src/main.c **** 
 468              		.loc 1 199 3 is_stmt 1 view .LVU132
 199:Core/Src/main.c **** 
 469              		.loc 1 199 34 is_stmt 0 view .LVU133
 470 0018 3422     		movs	r2, #52
 471 001a 0021     		movs	r1, #0
 472 001c 01A8     		add	r0, sp, #4
 473 001e FFF7FEFF 		bl	memset
 474              	.LVL21:
 204:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 475              		.loc 1 204 3 is_stmt 1 view .LVU134
 204:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 476              		.loc 1 204 18 is_stmt 0 view .LVU135
 477 0022 2748     		ldr	r0, .L35
 478 0024 274B     		ldr	r3, .L35+4
 479 0026 0360     		str	r3, [r0]
 205:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 480              		.loc 1 205 3 is_stmt 1 view .LVU136
 205:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 481              		.loc 1 205 24 is_stmt 0 view .LVU137
 482 0028 0023     		movs	r3, #0
 483 002a 4360     		str	r3, [r0, #4]
 206:Core/Src/main.c ****   htim1.Init.Period = 65535;
 484              		.loc 1 206 3 is_stmt 1 view .LVU138
 206:Core/Src/main.c ****   htim1.Init.Period = 65535;
 485              		.loc 1 206 26 is_stmt 0 view .LVU139
 486 002c 8360     		str	r3, [r0, #8]
 207:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 487              		.loc 1 207 3 is_stmt 1 view .LVU140
 207:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 488              		.loc 1 207 21 is_stmt 0 view .LVU141
 489 002e 264A     		ldr	r2, .L35+8
 490 0030 C260     		str	r2, [r0, #12]
 208:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 491              		.loc 1 208 3 is_stmt 1 view .LVU142
 208:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 492              		.loc 1 208 28 is_stmt 0 view .LVU143
 493 0032 0361     		str	r3, [r0, #16]
 209:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 494              		.loc 1 209 3 is_stmt 1 view .LVU144
 209:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccbFYdvV.s 			page 22


 495              		.loc 1 209 32 is_stmt 0 view .LVU145
 496 0034 4361     		str	r3, [r0, #20]
 210:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 497              		.loc 1 210 3 is_stmt 1 view .LVU146
 210:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 498              		.loc 1 210 32 is_stmt 0 view .LVU147
 499 0036 8361     		str	r3, [r0, #24]
 211:Core/Src/main.c ****   {
 500              		.loc 1 211 3 is_stmt 1 view .LVU148
 211:Core/Src/main.c ****   {
 501              		.loc 1 211 7 is_stmt 0 view .LVU149
 502 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 503              	.LVL22:
 211:Core/Src/main.c ****   {
 504              		.loc 1 211 6 discriminator 1 view .LVU150
 505 003c 0028     		cmp	r0, #0
 506 003e 36D1     		bne	.L31
 215:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 507              		.loc 1 215 3 is_stmt 1 view .LVU151
 215:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 508              		.loc 1 215 37 is_stmt 0 view .LVU152
 509 0040 15A9     		add	r1, sp, #84
 510 0042 0023     		movs	r3, #0
 511 0044 1593     		str	r3, [sp, #84]
 216:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 512              		.loc 1 216 3 is_stmt 1 view .LVU153
 216:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 513              		.loc 1 216 38 is_stmt 0 view .LVU154
 514 0046 4B60     		str	r3, [r1, #4]
 217:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 515              		.loc 1 217 3 is_stmt 1 view .LVU155
 217:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 516              		.loc 1 217 33 is_stmt 0 view .LVU156
 517 0048 8B60     		str	r3, [r1, #8]
 218:Core/Src/main.c ****   {
 518              		.loc 1 218 3 is_stmt 1 view .LVU157
 218:Core/Src/main.c ****   {
 519              		.loc 1 218 7 is_stmt 0 view .LVU158
 520 004a 1D48     		ldr	r0, .L35
 521 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 522              	.LVL23:
 218:Core/Src/main.c ****   {
 523              		.loc 1 218 6 discriminator 1 view .LVU159
 524 0050 0028     		cmp	r0, #0
 525 0052 2ED1     		bne	.L32
 222:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 526              		.loc 1 222 3 is_stmt 1 view .LVU160
 222:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 527              		.loc 1 222 20 is_stmt 0 view .LVU161
 528 0054 0EA9     		add	r1, sp, #56
 529 0056 6023     		movs	r3, #96
 530 0058 0E93     		str	r3, [sp, #56]
 223:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 531              		.loc 1 223 3 is_stmt 1 view .LVU162
 223:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 532              		.loc 1 223 19 is_stmt 0 view .LVU163
 533 005a 0023     		movs	r3, #0
ARM GAS  /tmp/ccbFYdvV.s 			page 23


 534 005c 4B60     		str	r3, [r1, #4]
 224:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 535              		.loc 1 224 3 is_stmt 1 view .LVU164
 224:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 536              		.loc 1 224 24 is_stmt 0 view .LVU165
 537 005e 8B60     		str	r3, [r1, #8]
 225:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 538              		.loc 1 225 3 is_stmt 1 view .LVU166
 225:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 539              		.loc 1 225 25 is_stmt 0 view .LVU167
 540 0060 CB60     		str	r3, [r1, #12]
 226:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 541              		.loc 1 226 3 is_stmt 1 view .LVU168
 226:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 542              		.loc 1 226 24 is_stmt 0 view .LVU169
 543 0062 0B61     		str	r3, [r1, #16]
 227:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 544              		.loc 1 227 3 is_stmt 1 view .LVU170
 227:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 545              		.loc 1 227 25 is_stmt 0 view .LVU171
 546 0064 4B61     		str	r3, [r1, #20]
 228:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 547              		.loc 1 228 3 is_stmt 1 view .LVU172
 228:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 548              		.loc 1 228 26 is_stmt 0 view .LVU173
 549 0066 8B61     		str	r3, [r1, #24]
 229:Core/Src/main.c ****   {
 550              		.loc 1 229 3 is_stmt 1 view .LVU174
 229:Core/Src/main.c ****   {
 551              		.loc 1 229 7 is_stmt 0 view .LVU175
 552 0068 1548     		ldr	r0, .L35
 553 006a 0022     		movs	r2, #0
 554 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 555              	.LVL24:
 229:Core/Src/main.c ****   {
 556              		.loc 1 229 6 discriminator 1 view .LVU176
 557 0070 0028     		cmp	r0, #0
 558 0072 20D1     		bne	.L33
 233:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 559              		.loc 1 233 3 is_stmt 1 view .LVU177
 233:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 560              		.loc 1 233 40 is_stmt 0 view .LVU178
 561 0074 01A9     		add	r1, sp, #4
 562 0076 0023     		movs	r3, #0
 563 0078 0193     		str	r3, [sp, #4]
 234:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 564              		.loc 1 234 3 is_stmt 1 view .LVU179
 234:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 565              		.loc 1 234 41 is_stmt 0 view .LVU180
 566 007a 4B60     		str	r3, [r1, #4]
 235:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 567              		.loc 1 235 3 is_stmt 1 view .LVU181
 235:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 568              		.loc 1 235 34 is_stmt 0 view .LVU182
 569 007c 8B60     		str	r3, [r1, #8]
 236:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 570              		.loc 1 236 3 is_stmt 1 view .LVU183
ARM GAS  /tmp/ccbFYdvV.s 			page 24


 236:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 571              		.loc 1 236 33 is_stmt 0 view .LVU184
 572 007e CB60     		str	r3, [r1, #12]
 237:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 573              		.loc 1 237 3 is_stmt 1 view .LVU185
 237:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 574              		.loc 1 237 35 is_stmt 0 view .LVU186
 575 0080 0B61     		str	r3, [r1, #16]
 238:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 576              		.loc 1 238 3 is_stmt 1 view .LVU187
 238:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 577              		.loc 1 238 38 is_stmt 0 view .LVU188
 578 0082 8022     		movs	r2, #128
 579 0084 9201     		lsls	r2, r2, #6
 580 0086 4A61     		str	r2, [r1, #20]
 239:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 581              		.loc 1 239 3 is_stmt 1 view .LVU189
 239:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 582              		.loc 1 239 36 is_stmt 0 view .LVU190
 583 0088 8B61     		str	r3, [r1, #24]
 240:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 584              		.loc 1 240 3 is_stmt 1 view .LVU191
 240:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 585              		.loc 1 240 36 is_stmt 0 view .LVU192
 586 008a CB61     		str	r3, [r1, #28]
 241:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 587              		.loc 1 241 3 is_stmt 1 view .LVU193
 241:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 588              		.loc 1 241 36 is_stmt 0 view .LVU194
 589 008c 0B62     		str	r3, [r1, #32]
 242:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 590              		.loc 1 242 3 is_stmt 1 view .LVU195
 242:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 591              		.loc 1 242 39 is_stmt 0 view .LVU196
 592 008e 8022     		movs	r2, #128
 593 0090 9204     		lsls	r2, r2, #18
 594 0092 4A62     		str	r2, [r1, #36]
 243:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 595              		.loc 1 243 3 is_stmt 1 view .LVU197
 243:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 596              		.loc 1 243 37 is_stmt 0 view .LVU198
 597 0094 8B62     		str	r3, [r1, #40]
 244:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 598              		.loc 1 244 3 is_stmt 1 view .LVU199
 244:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 599              		.loc 1 244 37 is_stmt 0 view .LVU200
 600 0096 CB62     		str	r3, [r1, #44]
 245:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 601              		.loc 1 245 3 is_stmt 1 view .LVU201
 245:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 602              		.loc 1 245 40 is_stmt 0 view .LVU202
 603 0098 0B63     		str	r3, [r1, #48]
 246:Core/Src/main.c ****   {
 604              		.loc 1 246 3 is_stmt 1 view .LVU203
 246:Core/Src/main.c ****   {
 605              		.loc 1 246 7 is_stmt 0 view .LVU204
 606 009a 0948     		ldr	r0, .L35
ARM GAS  /tmp/ccbFYdvV.s 			page 25


 607 009c FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 608              	.LVL25:
 246:Core/Src/main.c ****   {
 609              		.loc 1 246 6 discriminator 1 view .LVU205
 610 00a0 0028     		cmp	r0, #0
 611 00a2 0AD1     		bne	.L34
 253:Core/Src/main.c **** 
 612              		.loc 1 253 3 is_stmt 1 view .LVU206
 613 00a4 0648     		ldr	r0, .L35
 614 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 615              	.LVL26:
 255:Core/Src/main.c **** 
 616              		.loc 1 255 1 is_stmt 0 view .LVU207
 617 00aa 19B0     		add	sp, sp, #100
 618              		@ sp needed
 619 00ac 00BD     		pop	{pc}
 620              	.L31:
 213:Core/Src/main.c ****   }
 621              		.loc 1 213 5 is_stmt 1 view .LVU208
 622 00ae FFF7FEFF 		bl	Error_Handler
 623              	.LVL27:
 624              	.L32:
 220:Core/Src/main.c ****   }
 625              		.loc 1 220 5 view .LVU209
 626 00b2 FFF7FEFF 		bl	Error_Handler
 627              	.LVL28:
 628              	.L33:
 231:Core/Src/main.c ****   }
 629              		.loc 1 231 5 view .LVU210
 630 00b6 FFF7FEFF 		bl	Error_Handler
 631              	.LVL29:
 632              	.L34:
 248:Core/Src/main.c ****   }
 633              		.loc 1 248 5 view .LVU211
 634 00ba FFF7FEFF 		bl	Error_Handler
 635              	.LVL30:
 636              	.L36:
 637 00be C046     		.align	2
 638              	.L35:
 639 00c0 00000000 		.word	htim1
 640 00c4 002C0140 		.word	1073818624
 641 00c8 FFFF0000 		.word	65535
 642              		.cfi_endproc
 643              	.LFE312:
 645              		.section	.text.SystemClock_Config,"ax",%progbits
 646              		.align	1
 647              		.global	SystemClock_Config
 648              		.syntax unified
 649              		.code	16
 650              		.thumb_func
 652              	SystemClock_Config:
 653              	.LFB311:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 654              		.loc 1 147 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 72
 657              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccbFYdvV.s 			page 26


 658 0000 10B5     		push	{r4, lr}
 659              	.LCFI7:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 4, -8
 662              		.cfi_offset 14, -4
 663 0002 92B0     		sub	sp, sp, #72
 664              	.LCFI8:
 665              		.cfi_def_cfa_offset 80
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 666              		.loc 1 148 3 view .LVU213
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 667              		.loc 1 148 22 is_stmt 0 view .LVU214
 668 0004 05AC     		add	r4, sp, #20
 669 0006 3422     		movs	r2, #52
 670 0008 0021     		movs	r1, #0
 671 000a 2000     		movs	r0, r4
 672 000c FFF7FEFF 		bl	memset
 673              	.LVL31:
 149:Core/Src/main.c **** 
 674              		.loc 1 149 3 is_stmt 1 view .LVU215
 149:Core/Src/main.c **** 
 675              		.loc 1 149 22 is_stmt 0 view .LVU216
 676 0010 1022     		movs	r2, #16
 677 0012 0021     		movs	r1, #0
 678 0014 01A8     		add	r0, sp, #4
 679 0016 FFF7FEFF 		bl	memset
 680              	.LVL32:
 153:Core/Src/main.c **** 
 681              		.loc 1 153 3 is_stmt 1 view .LVU217
 682 001a 8020     		movs	r0, #128
 683 001c 8000     		lsls	r0, r0, #2
 684 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 685              	.LVL33:
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 686              		.loc 1 158 3 view .LVU218
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 687              		.loc 1 158 36 is_stmt 0 view .LVU219
 688 0022 0123     		movs	r3, #1
 689 0024 0593     		str	r3, [sp, #20]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 690              		.loc 1 159 3 is_stmt 1 view .LVU220
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 691              		.loc 1 159 30 is_stmt 0 view .LVU221
 692 0026 8023     		movs	r3, #128
 693 0028 5B02     		lsls	r3, r3, #9
 694 002a 0693     		str	r3, [sp, #24]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 695              		.loc 1 160 3 is_stmt 1 view .LVU222
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 696              		.loc 1 160 34 is_stmt 0 view .LVU223
 697 002c 0223     		movs	r3, #2
 698 002e 0C93     		str	r3, [sp, #48]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 699              		.loc 1 161 3 is_stmt 1 view .LVU224
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 700              		.loc 1 161 35 is_stmt 0 view .LVU225
 701 0030 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccbFYdvV.s 			page 27


 702 0032 0D93     		str	r3, [sp, #52]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 703              		.loc 1 162 3 is_stmt 1 view .LVU226
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 704              		.loc 1 162 30 is_stmt 0 view .LVU227
 705 0034 0023     		movs	r3, #0
 706 0036 0E93     		str	r3, [sp, #56]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 707              		.loc 1 163 3 is_stmt 1 view .LVU228
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 708              		.loc 1 163 30 is_stmt 0 view .LVU229
 709 0038 0833     		adds	r3, r3, #8
 710 003a 0F93     		str	r3, [sp, #60]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 711              		.loc 1 164 3 is_stmt 1 view .LVU230
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 712              		.loc 1 164 30 is_stmt 0 view .LVU231
 713 003c 8023     		movs	r3, #128
 714 003e 9B02     		lsls	r3, r3, #10
 715 0040 1093     		str	r3, [sp, #64]
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 716              		.loc 1 165 3 is_stmt 1 view .LVU232
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 717              		.loc 1 165 30 is_stmt 0 view .LVU233
 718 0042 8023     		movs	r3, #128
 719 0044 9B05     		lsls	r3, r3, #22
 720 0046 1193     		str	r3, [sp, #68]
 166:Core/Src/main.c ****   {
 721              		.loc 1 166 3 is_stmt 1 view .LVU234
 166:Core/Src/main.c ****   {
 722              		.loc 1 166 7 is_stmt 0 view .LVU235
 723 0048 2000     		movs	r0, r4
 724 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 725              	.LVL34:
 166:Core/Src/main.c ****   {
 726              		.loc 1 166 6 discriminator 1 view .LVU236
 727 004e 0028     		cmp	r0, #0
 728 0050 0ED1     		bne	.L40
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 729              		.loc 1 173 3 is_stmt 1 view .LVU237
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 730              		.loc 1 173 31 is_stmt 0 view .LVU238
 731 0052 01A8     		add	r0, sp, #4
 732 0054 0723     		movs	r3, #7
 733 0056 0193     		str	r3, [sp, #4]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 734              		.loc 1 175 3 is_stmt 1 view .LVU239
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 735              		.loc 1 175 34 is_stmt 0 view .LVU240
 736 0058 053B     		subs	r3, r3, #5
 737 005a 4360     		str	r3, [r0, #4]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 738              		.loc 1 176 3 is_stmt 1 view .LVU241
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 739              		.loc 1 176 35 is_stmt 0 view .LVU242
 740 005c 0023     		movs	r3, #0
 741 005e 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccbFYdvV.s 			page 28


 177:Core/Src/main.c **** 
 742              		.loc 1 177 3 is_stmt 1 view .LVU243
 177:Core/Src/main.c **** 
 743              		.loc 1 177 36 is_stmt 0 view .LVU244
 744 0060 C360     		str	r3, [r0, #12]
 179:Core/Src/main.c ****   {
 745              		.loc 1 179 3 is_stmt 1 view .LVU245
 179:Core/Src/main.c ****   {
 746              		.loc 1 179 7 is_stmt 0 view .LVU246
 747 0062 0221     		movs	r1, #2
 748 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 749              	.LVL35:
 179:Core/Src/main.c ****   {
 750              		.loc 1 179 6 discriminator 1 view .LVU247
 751 0068 0028     		cmp	r0, #0
 752 006a 03D1     		bne	.L41
 183:Core/Src/main.c **** 
 753              		.loc 1 183 1 view .LVU248
 754 006c 12B0     		add	sp, sp, #72
 755              		@ sp needed
 756 006e 10BD     		pop	{r4, pc}
 757              	.L40:
 168:Core/Src/main.c ****   }
 758              		.loc 1 168 5 is_stmt 1 view .LVU249
 759 0070 FFF7FEFF 		bl	Error_Handler
 760              	.LVL36:
 761              	.L41:
 181:Core/Src/main.c ****   }
 762              		.loc 1 181 5 view .LVU250
 763 0074 FFF7FEFF 		bl	Error_Handler
 764              	.LVL37:
 765              		.cfi_endproc
 766              	.LFE311:
 768              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 769              		.align	2
 770              	.LC7:
 771 0000 46616E20 		.ascii	"Fan RPM: %d \012\000"
 771      52504D3A 
 771      20256420 
 771      0A00
 772              		.section	.text.main,"ax",%progbits
 773              		.align	1
 774              		.global	main
 775              		.syntax unified
 776              		.code	16
 777              		.thumb_func
 779              	main:
 780              	.LFB310:
  77:Core/Src/main.c **** 
 781              		.loc 1 77 1 view -0
 782              		.cfi_startproc
 783              		@ Volatile: function does not return.
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786 0000 10B5     		push	{r4, lr}
 787              	.LCFI9:
 788              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccbFYdvV.s 			page 29


 789              		.cfi_offset 4, -8
 790              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 791              		.loc 1 86 3 view .LVU252
 792 0002 FFF7FEFF 		bl	HAL_Init
 793              	.LVL38:
  93:Core/Src/main.c **** 
 794              		.loc 1 93 3 view .LVU253
 795 0006 FFF7FEFF 		bl	SystemClock_Config
 796              	.LVL39:
 100:Core/Src/main.c ****   MX_TIM3_Init();
 797              		.loc 1 100 3 view .LVU254
 798 000a FFF7FEFF 		bl	MX_GPIO_Init
 799              	.LVL40:
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 800              		.loc 1 101 3 view .LVU255
 801 000e FFF7FEFF 		bl	MX_TIM3_Init
 802              	.LVL41:
 102:Core/Src/main.c ****   MX_TIM1_Init();
 803              		.loc 1 102 3 view .LVU256
 804 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 805              	.LVL42:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 806              		.loc 1 103 3 view .LVU257
 807 0016 FFF7FEFF 		bl	MX_TIM1_Init
 808              	.LVL43:
 109:Core/Src/main.c ****   logging_set_message_frequency(2000);
 809              		.loc 1 109 3 view .LVU258
 810 001a 1548     		ldr	r0, .L44
 811 001c FFF7FEFF 		bl	logging_subsystem_init
 812              	.LVL44:
 110:Core/Src/main.c **** 
 813              		.loc 1 110 3 view .LVU259
 814 0020 FA20     		movs	r0, #250
 815 0022 C000     		lsls	r0, r0, #3
 816 0024 FFF7FEFF 		bl	logging_set_message_frequency
 817              	.LVL45:
 114:Core/Src/main.c ****   heartbeat_on(&heartbeat_led);
 818              		.loc 1 114 3 view .LVU260
 819 0028 FA21     		movs	r1, #250
 820 002a 124C     		ldr	r4, .L44+4
 821 002c 8900     		lsls	r1, r1, #2
 822 002e 2000     		movs	r0, r4
 823 0030 FFF7FEFF 		bl	heartbeat_initialize
 824              	.LVL46:
 115:Core/Src/main.c **** 
 825              		.loc 1 115 3 view .LVU261
 826 0034 2000     		movs	r0, r4
 827 0036 FFF7FEFF 		bl	heartbeat_on
 828              	.LVL47:
 119:Core/Src/main.c **** 
 829              		.loc 1 119 3 view .LVU262
 830 003a 0F49     		ldr	r1, .L44+8
 831 003c 0F48     		ldr	r0, .L44+12
 832 003e 6422     		movs	r2, #100
 833 0040 FFF7FEFF 		bl	tachometer_init
 834              	.LVL48:
ARM GAS  /tmp/ccbFYdvV.s 			page 30


 835              	.L43:
 127:Core/Src/main.c ****   {
 836              		.loc 1 127 3 view .LVU263
 133:Core/Src/main.c ****     tachometer_update_rpm(&fan_tachometer, HAL_GetTick());
 837              		.loc 1 133 5 view .LVU264
 838 0044 FFF7FEFF 		bl	HAL_GetTick
 839              	.LVL49:
 840 0048 0100     		movs	r1, r0
 133:Core/Src/main.c ****     tachometer_update_rpm(&fan_tachometer, HAL_GetTick());
 841              		.loc 1 133 5 is_stmt 0 discriminator 1 view .LVU265
 842 004a 0A4B     		ldr	r3, .L44+4
 843 004c 1800     		movs	r0, r3
 844 004e FFF7FEFF 		bl	heartbeat_toggle
 845              	.LVL50:
 134:Core/Src/main.c ****     logging_send_periodic_msg(HAL_GetTick(), "Fan RPM: %d \n", fan_tachometer.current_rpm);
 846              		.loc 1 134 5 is_stmt 1 view .LVU266
 847 0052 FFF7FEFF 		bl	HAL_GetTick
 848              	.LVL51:
 849 0056 0100     		movs	r1, r0
 134:Core/Src/main.c ****     logging_send_periodic_msg(HAL_GetTick(), "Fan RPM: %d \n", fan_tachometer.current_rpm);
 850              		.loc 1 134 5 is_stmt 0 discriminator 1 view .LVU267
 851 0058 084C     		ldr	r4, .L44+12
 852 005a 2000     		movs	r0, r4
 853 005c FFF7FEFF 		bl	tachometer_update_rpm
 854              	.LVL52:
 135:Core/Src/main.c **** 
 855              		.loc 1 135 5 is_stmt 1 discriminator 1 view .LVU268
 856 0060 FFF7FEFF 		bl	HAL_GetTick
 857              	.LVL53:
 858 0064 A268     		ldr	r2, [r4, #8]
 859 0066 0649     		ldr	r1, .L44+16
 860 0068 FFF7FEFF 		bl	logging_send_periodic_msg
 861              	.LVL54:
 127:Core/Src/main.c ****   {
 862              		.loc 1 127 9 view .LVU269
 863 006c EAE7     		b	.L43
 864              	.L45:
 865 006e C046     		.align	2
 866              	.L44:
 867 0070 00000000 		.word	huart1
 868 0074 00000000 		.word	heartbeat_led
 869 0078 00000000 		.word	htim3
 870 007c 00000000 		.word	fan_tachometer
 871 0080 00000000 		.word	.LC7
 872              		.cfi_endproc
 873              	.LFE310:
 875              		.section	.data.cnt,"aw"
 878              	cnt:
 879 0000 03       		.byte	3
 880              		.section	.bss.fan_tachometer,"aw",%nobits
 881              		.align	2
 884              	fan_tachometer:
 885 0000 00000000 		.space	16
 885      00000000 
 885      00000000 
 885      00000000 
 886              		.section	.bss.heartbeat_led,"aw",%nobits
ARM GAS  /tmp/ccbFYdvV.s 			page 31


 887              		.align	2
 890              	heartbeat_led:
 891 0000 00000000 		.space	8
 891      00000000 
 892              		.global	huart1
 893              		.section	.bss.huart1,"aw",%nobits
 894              		.align	2
 897              	huart1:
 898 0000 00000000 		.space	148
 898      00000000 
 898      00000000 
 898      00000000 
 898      00000000 
 899              		.global	htim3
 900              		.section	.bss.htim3,"aw",%nobits
 901              		.align	2
 904              	htim3:
 905 0000 00000000 		.space	76
 905      00000000 
 905      00000000 
 905      00000000 
 905      00000000 
 906              		.global	htim1
 907              		.section	.bss.htim1,"aw",%nobits
 908              		.align	2
 911              	htim1:
 912 0000 00000000 		.space	76
 912      00000000 
 912      00000000 
 912      00000000 
 912      00000000 
 913              		.text
 914              	.Letext0:
 915              		.file 3 "/home/achraf/Desktop/Toolchain/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-
 916              		.file 4 "/home/achraf/Desktop/Toolchain/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-
 917              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 918              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 919              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 920              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 921              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 922              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 923              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 924              		.file 12 "Core/Inc/heartbeat.h"
 925              		.file 13 "Core/Inc/tachometer.h"
 926              		.file 14 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 927              		.file 15 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 928              		.file 16 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim_ex.h"
 929              		.file 17 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 930              		.file 18 "Core/Inc/main.h"
 931              		.file 19 "Core/Inc/logging.h"
 932              		.file 20 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 933              		.file 21 "<built-in>"
ARM GAS  /tmp/ccbFYdvV.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccbFYdvV.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccbFYdvV.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccbFYdvV.s:148    .text.MX_GPIO_Init:00000078 $d
     /tmp/ccbFYdvV.s:154    .text.Error_Handler:00000000 $t
     /tmp/ccbFYdvV.s:160    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccbFYdvV.s:192    .text.MX_TIM3_Init:00000000 $t
     /tmp/ccbFYdvV.s:197    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccbFYdvV.s:313    .text.MX_TIM3_Init:00000074 $d
     /tmp/ccbFYdvV.s:904    .bss.htim3:00000000 htim3
     /tmp/ccbFYdvV.s:320    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccbFYdvV.s:325    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccbFYdvV.s:430    .text.MX_USART1_UART_Init:00000060 $d
     /tmp/ccbFYdvV.s:897    .bss.huart1:00000000 huart1
     /tmp/ccbFYdvV.s:436    .text.MX_TIM1_Init:00000000 $t
     /tmp/ccbFYdvV.s:441    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccbFYdvV.s:639    .text.MX_TIM1_Init:000000c0 $d
     /tmp/ccbFYdvV.s:911    .bss.htim1:00000000 htim1
     /tmp/ccbFYdvV.s:646    .text.SystemClock_Config:00000000 $t
     /tmp/ccbFYdvV.s:652    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccbFYdvV.s:769    .rodata.main.str1.4:00000000 $d
     /tmp/ccbFYdvV.s:773    .text.main:00000000 $t
     /tmp/ccbFYdvV.s:779    .text.main:00000000 main
     /tmp/ccbFYdvV.s:867    .text.main:00000070 $d
     /tmp/ccbFYdvV.s:890    .bss.heartbeat_led:00000000 heartbeat_led
     /tmp/ccbFYdvV.s:884    .bss.fan_tachometer:00000000 fan_tachometer
     /tmp/ccbFYdvV.s:878    .data.cnt:00000000 cnt
     /tmp/ccbFYdvV.s:881    .bss.fan_tachometer:00000000 $d
     /tmp/ccbFYdvV.s:887    .bss.heartbeat_led:00000000 $d
     /tmp/ccbFYdvV.s:894    .bss.huart1:00000000 $d
     /tmp/ccbFYdvV.s:901    .bss.htim3:00000000 $d
     /tmp/ccbFYdvV.s:908    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
logging_subsystem_init
logging_set_message_frequency
heartbeat_initialize
heartbeat_on
ARM GAS  /tmp/ccbFYdvV.s 			page 33


tachometer_init
HAL_GetTick
heartbeat_toggle
tachometer_update_rpm
logging_send_periodic_msg
