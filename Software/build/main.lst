ARM GAS  /tmp/cckfOX2c.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB315:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cckfOX2c.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  44:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM1_Init(void);
  56:Core/Src/main.c **** static void MX_TIM3_Init(void);
  57:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** static heartbeat_led_t heartbeat_led;
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/cckfOX2c.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_TIM1_Init();
  97:Core/Src/main.c ****   MX_TIM3_Init();
  98:Core/Src/main.c ****   MX_USART1_UART_Init();
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /*****************   Initialize heartbeat LED (1 Hz) ****************/
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   heartbeat_initialize(&heartbeat_led, 1000);
 107:Core/Src/main.c ****   heartbeat_off(&heartbeat_led);
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /********************************************************************/
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****     
 128:Core/Src/main.c ****     heartbeat_toggle(&heartbeat_led, HAL_GetTick());
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 147:Core/Src/main.c **** 
ARM GAS  /tmp/cckfOX2c.s 			page 4


 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c **** }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 180:Core/Src/main.c ****   * @param None
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** static void MX_TIM1_Init(void)
 184:Core/Src/main.c **** {
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 191:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 192:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 197:Core/Src/main.c ****   htim1.Instance = TIM1;
 198:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 199:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 200:Core/Src/main.c ****   htim1.Init.Period = 65535;
 201:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 202:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 203:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 204:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
ARM GAS  /tmp/cckfOX2c.s 			page 5


 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 209:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 210:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 211:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 216:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 217:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 218:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 219:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 220:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 221:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 222:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 227:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 228:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 229:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 230:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 231:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 232:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 233:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 234:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 235:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 236:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 237:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 238:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 239:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 246:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /**
 251:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 252:Core/Src/main.c ****   * @param None
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** static void MX_TIM3_Init(void)
 256:Core/Src/main.c **** {
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 261:Core/Src/main.c **** 
ARM GAS  /tmp/cckfOX2c.s 			page 6


 262:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 263:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 268:Core/Src/main.c ****   htim3.Instance = TIM3;
 269:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 270:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 271:Core/Src/main.c ****   htim3.Init.Period = 65535;
 272:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 273:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 274:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 275:Core/Src/main.c ****   {
 276:Core/Src/main.c ****     Error_Handler();
 277:Core/Src/main.c ****   }
 278:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 279:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 280:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 285:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 286:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 287:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 288:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /**
 299:Core/Src/main.c ****   * @brief USART1 Initialization Function
 300:Core/Src/main.c ****   * @param None
 301:Core/Src/main.c ****   * @retval None
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 304:Core/Src/main.c **** {
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 313:Core/Src/main.c ****   huart1.Instance = USART1;
 314:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 315:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 316:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 317:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 318:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/cckfOX2c.s 			page 7


 319:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 320:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 321:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 322:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 323:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 324:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****     Error_Handler();
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 333:Core/Src/main.c ****   {
 334:Core/Src/main.c ****     Error_Handler();
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /**
 347:Core/Src/main.c ****   * @brief GPIO Initialization Function
 348:Core/Src/main.c ****   * @param None
 349:Core/Src/main.c ****   * @retval None
 350:Core/Src/main.c ****   */
 351:Core/Src/main.c **** static void MX_GPIO_Init(void)
 352:Core/Src/main.c **** {
  26              		.loc 1 352 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 64
 353:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 353 3 view .LVU1
  42              		.loc 1 353 20 is_stmt 0 view .LVU2
  43 0004 05AC     		add	r4, sp, #20
  44 0006 1422     		movs	r2, #20
  45 0008 0021     		movs	r1, #0
  46 000a 2000     		movs	r0, r4
  47 000c FFF7FEFF 		bl	memset
ARM GAS  /tmp/cckfOX2c.s 			page 8


  48              	.LVL0:
 354:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 359:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  49              		.loc 1 359 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 359 3 view .LVU4
  52              		.loc 1 359 3 view .LVU5
  53 0010 194B     		ldr	r3, .L2
  54 0012 596B     		ldr	r1, [r3, #52]
  55 0014 2022     		movs	r2, #32
  56 0016 1143     		orrs	r1, r2
  57 0018 5963     		str	r1, [r3, #52]
  58              		.loc 1 359 3 view .LVU6
  59 001a 596B     		ldr	r1, [r3, #52]
  60 001c 0A40     		ands	r2, r1
  61 001e 0192     		str	r2, [sp, #4]
  62              		.loc 1 359 3 view .LVU7
  63 0020 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 359 3 view .LVU8
 360:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 360 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 360 3 view .LVU10
  69              		.loc 1 360 3 view .LVU11
  70 0022 596B     		ldr	r1, [r3, #52]
  71 0024 0422     		movs	r2, #4
  72 0026 1143     		orrs	r1, r2
  73 0028 5963     		str	r1, [r3, #52]
  74              		.loc 1 360 3 view .LVU12
  75 002a 596B     		ldr	r1, [r3, #52]
  76 002c 0A40     		ands	r2, r1
  77 002e 0292     		str	r2, [sp, #8]
  78              		.loc 1 360 3 view .LVU13
  79 0030 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 360 3 view .LVU14
 361:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 361 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 361 3 view .LVU16
  85              		.loc 1 361 3 view .LVU17
  86 0032 596B     		ldr	r1, [r3, #52]
  87 0034 0222     		movs	r2, #2
  88 0036 1143     		orrs	r1, r2
  89 0038 5963     		str	r1, [r3, #52]
  90              		.loc 1 361 3 view .LVU18
  91 003a 596B     		ldr	r1, [r3, #52]
  92 003c 0A40     		ands	r2, r1
  93 003e 0392     		str	r2, [sp, #12]
  94              		.loc 1 361 3 view .LVU19
  95 0040 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
ARM GAS  /tmp/cckfOX2c.s 			page 9


  97              		.loc 1 361 3 view .LVU20
 362:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  98              		.loc 1 362 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 362 3 view .LVU22
 101              		.loc 1 362 3 view .LVU23
 102 0042 5A6B     		ldr	r2, [r3, #52]
 103 0044 0125     		movs	r5, #1
 104 0046 2A43     		orrs	r2, r5
 105 0048 5A63     		str	r2, [r3, #52]
 106              		.loc 1 362 3 view .LVU24
 107 004a 5B6B     		ldr	r3, [r3, #52]
 108 004c 2B40     		ands	r3, r5
 109 004e 0493     		str	r3, [sp, #16]
 110              		.loc 1 362 3 view .LVU25
 111 0050 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 362 3 view .LVU26
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 365:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 114              		.loc 1 365 3 view .LVU27
 115 0052 8027     		movs	r7, #128
 116 0054 BF01     		lsls	r7, r7, #6
 117 0056 094E     		ldr	r6, .L2+4
 118 0058 0022     		movs	r2, #0
 119 005a 3900     		movs	r1, r7
 120 005c 3000     		movs	r0, r6
 121 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 122              	.LVL1:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /*Configure GPIO pin : PB13 */
 368:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 123              		.loc 1 368 3 view .LVU28
 124              		.loc 1 368 23 is_stmt 0 view .LVU29
 125 0062 0597     		str	r7, [sp, #20]
 369:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 369 3 is_stmt 1 view .LVU30
 127              		.loc 1 369 24 is_stmt 0 view .LVU31
 128 0064 0695     		str	r5, [sp, #24]
 370:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 370 3 is_stmt 1 view .LVU32
 130              		.loc 1 370 24 is_stmt 0 view .LVU33
 131 0066 0023     		movs	r3, #0
 132 0068 0793     		str	r3, [sp, #28]
 371:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 133              		.loc 1 371 3 is_stmt 1 view .LVU34
 134              		.loc 1 371 25 is_stmt 0 view .LVU35
 135 006a 0893     		str	r3, [sp, #32]
 372:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 136              		.loc 1 372 3 is_stmt 1 view .LVU36
 137 006c 2100     		movs	r1, r4
 138 006e 3000     		movs	r0, r6
 139 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL2:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
ARM GAS  /tmp/cckfOX2c.s 			page 10


 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 377:Core/Src/main.c **** }
 141              		.loc 1 377 1 is_stmt 0 view .LVU37
 142 0074 0BB0     		add	sp, sp, #44
 143              		@ sp needed
 144 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 145              	.L3:
 146              		.align	2
 147              	.L2:
 148 0078 00100240 		.word	1073876992
 149 007c 00040050 		.word	1342178304
 150              		.cfi_endproc
 151              	.LFE315:
 153              		.section	.text.Error_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	Error_Handler
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 160              	Error_Handler:
 161              	.LFB316:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /* USER CODE END 4 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /**
 384:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** void Error_Handler(void)
 388:Core/Src/main.c **** {
 162              		.loc 1 388 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ Volatile: function does not return.
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 389:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 390:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 391:Core/Src/main.c ****   __disable_irq();
 168              		.loc 1 391 3 view .LVU39
 169              	.LBB8:
 170              	.LBI8:
 171              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cckfOX2c.s 			page 11


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  /tmp/cckfOX2c.s 			page 12


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
ARM GAS  /tmp/cckfOX2c.s 			page 13


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
ARM GAS  /tmp/cckfOX2c.s 			page 14


 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 172              		.loc 2 207 27 view .LVU40
 173              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 174              		.loc 2 209 3 view .LVU41
 175              		.syntax divided
 176              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 177 0000 72B6     		cpsid i
 178              	@ 0 "" 2
 179              		.thumb
 180              		.syntax unified
 181              	.L5:
 182              	.LBE9:
 183              	.LBE8:
 392:Core/Src/main.c ****   while (1)
 184              		.loc 1 392 3 view .LVU42
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****   }
 185              		.loc 1 394 3 view .LVU43
 392:Core/Src/main.c ****   while (1)
 186              		.loc 1 392 9 view .LVU44
 187 0002 FEE7     		b	.L5
 188              		.cfi_endproc
 189              	.LFE316:
 191              		.section	.text.MX_TIM1_Init,"ax",%progbits
 192              		.align	1
 193              		.syntax unified
 194              		.code	16
 195              		.thumb_func
 197              	MX_TIM1_Init:
 198              	.LFB312:
 184:Core/Src/main.c **** 
ARM GAS  /tmp/cckfOX2c.s 			page 15


 199              		.loc 1 184 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 96
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 00B5     		push	{lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 14, -4
 207 0002 99B0     		sub	sp, sp, #100
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 104
 190:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 210              		.loc 1 190 3 view .LVU46
 190:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 211              		.loc 1 190 27 is_stmt 0 view .LVU47
 212 0004 0C22     		movs	r2, #12
 213 0006 0021     		movs	r1, #0
 214 0008 15A8     		add	r0, sp, #84
 215 000a FFF7FEFF 		bl	memset
 216              	.LVL3:
 191:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 217              		.loc 1 191 3 is_stmt 1 view .LVU48
 191:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 218              		.loc 1 191 22 is_stmt 0 view .LVU49
 219 000e 1C22     		movs	r2, #28
 220 0010 0021     		movs	r1, #0
 221 0012 0EA8     		add	r0, sp, #56
 222 0014 FFF7FEFF 		bl	memset
 223              	.LVL4:
 192:Core/Src/main.c **** 
 224              		.loc 1 192 3 is_stmt 1 view .LVU50
 192:Core/Src/main.c **** 
 225              		.loc 1 192 34 is_stmt 0 view .LVU51
 226 0018 3422     		movs	r2, #52
 227 001a 0021     		movs	r1, #0
 228 001c 01A8     		add	r0, sp, #4
 229 001e FFF7FEFF 		bl	memset
 230              	.LVL5:
 197:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 231              		.loc 1 197 3 is_stmt 1 view .LVU52
 197:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 232              		.loc 1 197 18 is_stmt 0 view .LVU53
 233 0022 2748     		ldr	r0, .L15
 234 0024 274B     		ldr	r3, .L15+4
 235 0026 0360     		str	r3, [r0]
 198:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 236              		.loc 1 198 3 is_stmt 1 view .LVU54
 198:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 237              		.loc 1 198 24 is_stmt 0 view .LVU55
 238 0028 0023     		movs	r3, #0
 239 002a 4360     		str	r3, [r0, #4]
 199:Core/Src/main.c ****   htim1.Init.Period = 65535;
 240              		.loc 1 199 3 is_stmt 1 view .LVU56
 199:Core/Src/main.c ****   htim1.Init.Period = 65535;
 241              		.loc 1 199 26 is_stmt 0 view .LVU57
 242 002c 8360     		str	r3, [r0, #8]
 200:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/cckfOX2c.s 			page 16


 243              		.loc 1 200 3 is_stmt 1 view .LVU58
 200:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 244              		.loc 1 200 21 is_stmt 0 view .LVU59
 245 002e 264A     		ldr	r2, .L15+8
 246 0030 C260     		str	r2, [r0, #12]
 201:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 247              		.loc 1 201 3 is_stmt 1 view .LVU60
 201:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 248              		.loc 1 201 28 is_stmt 0 view .LVU61
 249 0032 0361     		str	r3, [r0, #16]
 202:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 250              		.loc 1 202 3 is_stmt 1 view .LVU62
 202:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 251              		.loc 1 202 32 is_stmt 0 view .LVU63
 252 0034 4361     		str	r3, [r0, #20]
 203:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 253              		.loc 1 203 3 is_stmt 1 view .LVU64
 203:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 254              		.loc 1 203 32 is_stmt 0 view .LVU65
 255 0036 8361     		str	r3, [r0, #24]
 204:Core/Src/main.c ****   {
 256              		.loc 1 204 3 is_stmt 1 view .LVU66
 204:Core/Src/main.c ****   {
 257              		.loc 1 204 7 is_stmt 0 view .LVU67
 258 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 259              	.LVL6:
 204:Core/Src/main.c ****   {
 260              		.loc 1 204 6 discriminator 1 view .LVU68
 261 003c 0028     		cmp	r0, #0
 262 003e 36D1     		bne	.L11
 208:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 263              		.loc 1 208 3 is_stmt 1 view .LVU69
 208:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 264              		.loc 1 208 37 is_stmt 0 view .LVU70
 265 0040 15A9     		add	r1, sp, #84
 266 0042 0023     		movs	r3, #0
 267 0044 1593     		str	r3, [sp, #84]
 209:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 268              		.loc 1 209 3 is_stmt 1 view .LVU71
 209:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 269              		.loc 1 209 38 is_stmt 0 view .LVU72
 270 0046 4B60     		str	r3, [r1, #4]
 210:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 271              		.loc 1 210 3 is_stmt 1 view .LVU73
 210:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 272              		.loc 1 210 33 is_stmt 0 view .LVU74
 273 0048 8B60     		str	r3, [r1, #8]
 211:Core/Src/main.c ****   {
 274              		.loc 1 211 3 is_stmt 1 view .LVU75
 211:Core/Src/main.c ****   {
 275              		.loc 1 211 7 is_stmt 0 view .LVU76
 276 004a 1D48     		ldr	r0, .L15
 277 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 278              	.LVL7:
 211:Core/Src/main.c ****   {
 279              		.loc 1 211 6 discriminator 1 view .LVU77
 280 0050 0028     		cmp	r0, #0
ARM GAS  /tmp/cckfOX2c.s 			page 17


 281 0052 2ED1     		bne	.L12
 215:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 282              		.loc 1 215 3 is_stmt 1 view .LVU78
 215:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 283              		.loc 1 215 20 is_stmt 0 view .LVU79
 284 0054 0EA9     		add	r1, sp, #56
 285 0056 6023     		movs	r3, #96
 286 0058 0E93     		str	r3, [sp, #56]
 216:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 287              		.loc 1 216 3 is_stmt 1 view .LVU80
 216:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 288              		.loc 1 216 19 is_stmt 0 view .LVU81
 289 005a 0023     		movs	r3, #0
 290 005c 4B60     		str	r3, [r1, #4]
 217:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 291              		.loc 1 217 3 is_stmt 1 view .LVU82
 217:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 292              		.loc 1 217 24 is_stmt 0 view .LVU83
 293 005e 8B60     		str	r3, [r1, #8]
 218:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 294              		.loc 1 218 3 is_stmt 1 view .LVU84
 218:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 295              		.loc 1 218 25 is_stmt 0 view .LVU85
 296 0060 CB60     		str	r3, [r1, #12]
 219:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 297              		.loc 1 219 3 is_stmt 1 view .LVU86
 219:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 298              		.loc 1 219 24 is_stmt 0 view .LVU87
 299 0062 0B61     		str	r3, [r1, #16]
 220:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 300              		.loc 1 220 3 is_stmt 1 view .LVU88
 220:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 301              		.loc 1 220 25 is_stmt 0 view .LVU89
 302 0064 4B61     		str	r3, [r1, #20]
 221:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 303              		.loc 1 221 3 is_stmt 1 view .LVU90
 221:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 304              		.loc 1 221 26 is_stmt 0 view .LVU91
 305 0066 8B61     		str	r3, [r1, #24]
 222:Core/Src/main.c ****   {
 306              		.loc 1 222 3 is_stmt 1 view .LVU92
 222:Core/Src/main.c ****   {
 307              		.loc 1 222 7 is_stmt 0 view .LVU93
 308 0068 1548     		ldr	r0, .L15
 309 006a 0022     		movs	r2, #0
 310 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 311              	.LVL8:
 222:Core/Src/main.c ****   {
 312              		.loc 1 222 6 discriminator 1 view .LVU94
 313 0070 0028     		cmp	r0, #0
 314 0072 20D1     		bne	.L13
 226:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 315              		.loc 1 226 3 is_stmt 1 view .LVU95
 226:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 316              		.loc 1 226 40 is_stmt 0 view .LVU96
 317 0074 01A9     		add	r1, sp, #4
 318 0076 0023     		movs	r3, #0
ARM GAS  /tmp/cckfOX2c.s 			page 18


 319 0078 0193     		str	r3, [sp, #4]
 227:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 320              		.loc 1 227 3 is_stmt 1 view .LVU97
 227:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 321              		.loc 1 227 41 is_stmt 0 view .LVU98
 322 007a 4B60     		str	r3, [r1, #4]
 228:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 323              		.loc 1 228 3 is_stmt 1 view .LVU99
 228:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 324              		.loc 1 228 34 is_stmt 0 view .LVU100
 325 007c 8B60     		str	r3, [r1, #8]
 229:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 326              		.loc 1 229 3 is_stmt 1 view .LVU101
 229:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 327              		.loc 1 229 33 is_stmt 0 view .LVU102
 328 007e CB60     		str	r3, [r1, #12]
 230:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 329              		.loc 1 230 3 is_stmt 1 view .LVU103
 230:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 330              		.loc 1 230 35 is_stmt 0 view .LVU104
 331 0080 0B61     		str	r3, [r1, #16]
 231:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 332              		.loc 1 231 3 is_stmt 1 view .LVU105
 231:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 333              		.loc 1 231 38 is_stmt 0 view .LVU106
 334 0082 8022     		movs	r2, #128
 335 0084 9201     		lsls	r2, r2, #6
 336 0086 4A61     		str	r2, [r1, #20]
 232:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 337              		.loc 1 232 3 is_stmt 1 view .LVU107
 232:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 338              		.loc 1 232 36 is_stmt 0 view .LVU108
 339 0088 8B61     		str	r3, [r1, #24]
 233:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 340              		.loc 1 233 3 is_stmt 1 view .LVU109
 233:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 341              		.loc 1 233 36 is_stmt 0 view .LVU110
 342 008a CB61     		str	r3, [r1, #28]
 234:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 343              		.loc 1 234 3 is_stmt 1 view .LVU111
 234:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 344              		.loc 1 234 36 is_stmt 0 view .LVU112
 345 008c 0B62     		str	r3, [r1, #32]
 235:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 346              		.loc 1 235 3 is_stmt 1 view .LVU113
 235:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 347              		.loc 1 235 39 is_stmt 0 view .LVU114
 348 008e 8022     		movs	r2, #128
 349 0090 9204     		lsls	r2, r2, #18
 350 0092 4A62     		str	r2, [r1, #36]
 236:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 351              		.loc 1 236 3 is_stmt 1 view .LVU115
 236:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 352              		.loc 1 236 37 is_stmt 0 view .LVU116
 353 0094 8B62     		str	r3, [r1, #40]
 237:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 354              		.loc 1 237 3 is_stmt 1 view .LVU117
ARM GAS  /tmp/cckfOX2c.s 			page 19


 237:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 355              		.loc 1 237 37 is_stmt 0 view .LVU118
 356 0096 CB62     		str	r3, [r1, #44]
 238:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 357              		.loc 1 238 3 is_stmt 1 view .LVU119
 238:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 358              		.loc 1 238 40 is_stmt 0 view .LVU120
 359 0098 0B63     		str	r3, [r1, #48]
 239:Core/Src/main.c ****   {
 360              		.loc 1 239 3 is_stmt 1 view .LVU121
 239:Core/Src/main.c ****   {
 361              		.loc 1 239 7 is_stmt 0 view .LVU122
 362 009a 0948     		ldr	r0, .L15
 363 009c FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 364              	.LVL9:
 239:Core/Src/main.c ****   {
 365              		.loc 1 239 6 discriminator 1 view .LVU123
 366 00a0 0028     		cmp	r0, #0
 367 00a2 0AD1     		bne	.L14
 246:Core/Src/main.c **** 
 368              		.loc 1 246 3 is_stmt 1 view .LVU124
 369 00a4 0648     		ldr	r0, .L15
 370 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 371              	.LVL10:
 248:Core/Src/main.c **** 
 372              		.loc 1 248 1 is_stmt 0 view .LVU125
 373 00aa 19B0     		add	sp, sp, #100
 374              		@ sp needed
 375 00ac 00BD     		pop	{pc}
 376              	.L11:
 206:Core/Src/main.c ****   }
 377              		.loc 1 206 5 is_stmt 1 view .LVU126
 378 00ae FFF7FEFF 		bl	Error_Handler
 379              	.LVL11:
 380              	.L12:
 213:Core/Src/main.c ****   }
 381              		.loc 1 213 5 view .LVU127
 382 00b2 FFF7FEFF 		bl	Error_Handler
 383              	.LVL12:
 384              	.L13:
 224:Core/Src/main.c ****   }
 385              		.loc 1 224 5 view .LVU128
 386 00b6 FFF7FEFF 		bl	Error_Handler
 387              	.LVL13:
 388              	.L14:
 241:Core/Src/main.c ****   }
 389              		.loc 1 241 5 view .LVU129
 390 00ba FFF7FEFF 		bl	Error_Handler
 391              	.LVL14:
 392              	.L16:
 393 00be C046     		.align	2
 394              	.L15:
 395 00c0 00000000 		.word	htim1
 396 00c4 002C0140 		.word	1073818624
 397 00c8 FFFF0000 		.word	65535
 398              		.cfi_endproc
 399              	.LFE312:
ARM GAS  /tmp/cckfOX2c.s 			page 20


 401              		.section	.text.MX_TIM3_Init,"ax",%progbits
 402              		.align	1
 403              		.syntax unified
 404              		.code	16
 405              		.thumb_func
 407              	MX_TIM3_Init:
 408              	.LFB313:
 256:Core/Src/main.c **** 
 409              		.loc 1 256 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 32
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 00B5     		push	{lr}
 414              	.LCFI4:
 415              		.cfi_def_cfa_offset 4
 416              		.cfi_offset 14, -4
 417 0002 89B0     		sub	sp, sp, #36
 418              	.LCFI5:
 419              		.cfi_def_cfa_offset 40
 262:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 420              		.loc 1 262 3 view .LVU131
 262:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 421              		.loc 1 262 27 is_stmt 0 view .LVU132
 422 0004 0C22     		movs	r2, #12
 423 0006 0021     		movs	r1, #0
 424 0008 05A8     		add	r0, sp, #20
 425 000a FFF7FEFF 		bl	memset
 426              	.LVL15:
 263:Core/Src/main.c **** 
 427              		.loc 1 263 3 is_stmt 1 view .LVU133
 263:Core/Src/main.c **** 
 428              		.loc 1 263 22 is_stmt 0 view .LVU134
 429 000e 1022     		movs	r2, #16
 430 0010 0021     		movs	r1, #0
 431 0012 01A8     		add	r0, sp, #4
 432 0014 FFF7FEFF 		bl	memset
 433              	.LVL16:
 268:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 434              		.loc 1 268 3 is_stmt 1 view .LVU135
 268:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 435              		.loc 1 268 18 is_stmt 0 view .LVU136
 436 0018 1548     		ldr	r0, .L24
 437 001a 164B     		ldr	r3, .L24+4
 438 001c 0360     		str	r3, [r0]
 269:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 439              		.loc 1 269 3 is_stmt 1 view .LVU137
 269:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 440              		.loc 1 269 24 is_stmt 0 view .LVU138
 441 001e 0023     		movs	r3, #0
 442 0020 4360     		str	r3, [r0, #4]
 270:Core/Src/main.c ****   htim3.Init.Period = 65535;
 443              		.loc 1 270 3 is_stmt 1 view .LVU139
 270:Core/Src/main.c ****   htim3.Init.Period = 65535;
 444              		.loc 1 270 26 is_stmt 0 view .LVU140
 445 0022 8360     		str	r3, [r0, #8]
 271:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 446              		.loc 1 271 3 is_stmt 1 view .LVU141
ARM GAS  /tmp/cckfOX2c.s 			page 21


 271:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 447              		.loc 1 271 21 is_stmt 0 view .LVU142
 448 0024 144A     		ldr	r2, .L24+8
 449 0026 C260     		str	r2, [r0, #12]
 272:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 450              		.loc 1 272 3 is_stmt 1 view .LVU143
 272:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 451              		.loc 1 272 28 is_stmt 0 view .LVU144
 452 0028 0361     		str	r3, [r0, #16]
 273:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 453              		.loc 1 273 3 is_stmt 1 view .LVU145
 273:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 454              		.loc 1 273 32 is_stmt 0 view .LVU146
 455 002a 8361     		str	r3, [r0, #24]
 274:Core/Src/main.c ****   {
 456              		.loc 1 274 3 is_stmt 1 view .LVU147
 274:Core/Src/main.c ****   {
 457              		.loc 1 274 7 is_stmt 0 view .LVU148
 458 002c FFF7FEFF 		bl	HAL_TIM_IC_Init
 459              	.LVL17:
 274:Core/Src/main.c ****   {
 460              		.loc 1 274 6 discriminator 1 view .LVU149
 461 0030 0028     		cmp	r0, #0
 462 0032 17D1     		bne	.L21
 278:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 463              		.loc 1 278 3 is_stmt 1 view .LVU150
 278:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 464              		.loc 1 278 37 is_stmt 0 view .LVU151
 465 0034 05A9     		add	r1, sp, #20
 466 0036 0023     		movs	r3, #0
 467 0038 0593     		str	r3, [sp, #20]
 279:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 468              		.loc 1 279 3 is_stmt 1 view .LVU152
 279:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 469              		.loc 1 279 33 is_stmt 0 view .LVU153
 470 003a 8B60     		str	r3, [r1, #8]
 280:Core/Src/main.c ****   {
 471              		.loc 1 280 3 is_stmt 1 view .LVU154
 280:Core/Src/main.c ****   {
 472              		.loc 1 280 7 is_stmt 0 view .LVU155
 473 003c 0C48     		ldr	r0, .L24
 474 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 475              	.LVL18:
 280:Core/Src/main.c ****   {
 476              		.loc 1 280 6 discriminator 1 view .LVU156
 477 0042 0028     		cmp	r0, #0
 478 0044 10D1     		bne	.L22
 284:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 479              		.loc 1 284 3 is_stmt 1 view .LVU157
 284:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 480              		.loc 1 284 24 is_stmt 0 view .LVU158
 481 0046 01A9     		add	r1, sp, #4
 482 0048 0023     		movs	r3, #0
 483 004a 0193     		str	r3, [sp, #4]
 285:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 484              		.loc 1 285 3 is_stmt 1 view .LVU159
 285:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
ARM GAS  /tmp/cckfOX2c.s 			page 22


 485              		.loc 1 285 25 is_stmt 0 view .LVU160
 486 004c 0122     		movs	r2, #1
 487 004e 4A60     		str	r2, [r1, #4]
 286:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 488              		.loc 1 286 3 is_stmt 1 view .LVU161
 286:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 489              		.loc 1 286 25 is_stmt 0 view .LVU162
 490 0050 8B60     		str	r3, [r1, #8]
 287:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 491              		.loc 1 287 3 is_stmt 1 view .LVU163
 287:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 492              		.loc 1 287 22 is_stmt 0 view .LVU164
 493 0052 CB60     		str	r3, [r1, #12]
 288:Core/Src/main.c ****   {
 494              		.loc 1 288 3 is_stmt 1 view .LVU165
 288:Core/Src/main.c ****   {
 495              		.loc 1 288 7 is_stmt 0 view .LVU166
 496 0054 0648     		ldr	r0, .L24
 497 0056 0332     		adds	r2, r2, #3
 498 0058 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 499              	.LVL19:
 288:Core/Src/main.c ****   {
 500              		.loc 1 288 6 discriminator 1 view .LVU167
 501 005c 0028     		cmp	r0, #0
 502 005e 05D1     		bne	.L23
 296:Core/Src/main.c **** 
 503              		.loc 1 296 1 view .LVU168
 504 0060 09B0     		add	sp, sp, #36
 505              		@ sp needed
 506 0062 00BD     		pop	{pc}
 507              	.L21:
 276:Core/Src/main.c ****   }
 508              		.loc 1 276 5 is_stmt 1 view .LVU169
 509 0064 FFF7FEFF 		bl	Error_Handler
 510              	.LVL20:
 511              	.L22:
 282:Core/Src/main.c ****   }
 512              		.loc 1 282 5 view .LVU170
 513 0068 FFF7FEFF 		bl	Error_Handler
 514              	.LVL21:
 515              	.L23:
 290:Core/Src/main.c ****   }
 516              		.loc 1 290 5 view .LVU171
 517 006c FFF7FEFF 		bl	Error_Handler
 518              	.LVL22:
 519              	.L25:
 520              		.align	2
 521              	.L24:
 522 0070 00000000 		.word	htim3
 523 0074 00040040 		.word	1073742848
 524 0078 FFFF0000 		.word	65535
 525              		.cfi_endproc
 526              	.LFE313:
 528              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 529              		.align	1
 530              		.syntax unified
 531              		.code	16
ARM GAS  /tmp/cckfOX2c.s 			page 23


 532              		.thumb_func
 534              	MX_USART1_UART_Init:
 535              	.LFB314:
 304:Core/Src/main.c **** 
 536              		.loc 1 304 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 10B5     		push	{r4, lr}
 541              	.LCFI6:
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 4, -8
 544              		.cfi_offset 14, -4
 313:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 545              		.loc 1 313 3 view .LVU173
 313:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 546              		.loc 1 313 19 is_stmt 0 view .LVU174
 547 0002 1748     		ldr	r0, .L35
 548 0004 174B     		ldr	r3, .L35+4
 549 0006 0360     		str	r3, [r0]
 314:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 550              		.loc 1 314 3 is_stmt 1 view .LVU175
 314:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 551              		.loc 1 314 24 is_stmt 0 view .LVU176
 552 0008 E123     		movs	r3, #225
 553 000a 5B02     		lsls	r3, r3, #9
 554 000c 4360     		str	r3, [r0, #4]
 315:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 555              		.loc 1 315 3 is_stmt 1 view .LVU177
 315:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 556              		.loc 1 315 26 is_stmt 0 view .LVU178
 557 000e 0023     		movs	r3, #0
 558 0010 8360     		str	r3, [r0, #8]
 316:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 559              		.loc 1 316 3 is_stmt 1 view .LVU179
 316:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 560              		.loc 1 316 24 is_stmt 0 view .LVU180
 561 0012 C360     		str	r3, [r0, #12]
 317:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 562              		.loc 1 317 3 is_stmt 1 view .LVU181
 317:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 563              		.loc 1 317 22 is_stmt 0 view .LVU182
 564 0014 0361     		str	r3, [r0, #16]
 318:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 565              		.loc 1 318 3 is_stmt 1 view .LVU183
 318:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 566              		.loc 1 318 20 is_stmt 0 view .LVU184
 567 0016 0C22     		movs	r2, #12
 568 0018 4261     		str	r2, [r0, #20]
 319:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 569              		.loc 1 319 3 is_stmt 1 view .LVU185
 319:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 570              		.loc 1 319 25 is_stmt 0 view .LVU186
 571 001a 8361     		str	r3, [r0, #24]
 320:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 572              		.loc 1 320 3 is_stmt 1 view .LVU187
 320:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  /tmp/cckfOX2c.s 			page 24


 573              		.loc 1 320 28 is_stmt 0 view .LVU188
 574 001c C361     		str	r3, [r0, #28]
 321:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 575              		.loc 1 321 3 is_stmt 1 view .LVU189
 321:Core/Src/main.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 576              		.loc 1 321 30 is_stmt 0 view .LVU190
 577 001e 0362     		str	r3, [r0, #32]
 322:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 578              		.loc 1 322 3 is_stmt 1 view .LVU191
 322:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 579              		.loc 1 322 30 is_stmt 0 view .LVU192
 580 0020 4362     		str	r3, [r0, #36]
 323:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 581              		.loc 1 323 3 is_stmt 1 view .LVU193
 323:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 582              		.loc 1 323 38 is_stmt 0 view .LVU194
 583 0022 8362     		str	r3, [r0, #40]
 324:Core/Src/main.c ****   {
 584              		.loc 1 324 3 is_stmt 1 view .LVU195
 324:Core/Src/main.c ****   {
 585              		.loc 1 324 7 is_stmt 0 view .LVU196
 586 0024 FFF7FEFF 		bl	HAL_UART_Init
 587              	.LVL23:
 324:Core/Src/main.c ****   {
 588              		.loc 1 324 6 discriminator 1 view .LVU197
 589 0028 0028     		cmp	r0, #0
 590 002a 11D1     		bne	.L31
 328:Core/Src/main.c ****   {
 591              		.loc 1 328 3 is_stmt 1 view .LVU198
 328:Core/Src/main.c ****   {
 592              		.loc 1 328 7 is_stmt 0 view .LVU199
 593 002c 0C48     		ldr	r0, .L35
 594 002e 0021     		movs	r1, #0
 595 0030 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 596              	.LVL24:
 328:Core/Src/main.c ****   {
 597              		.loc 1 328 6 discriminator 1 view .LVU200
 598 0034 0028     		cmp	r0, #0
 599 0036 0DD1     		bne	.L32
 332:Core/Src/main.c ****   {
 600              		.loc 1 332 3 is_stmt 1 view .LVU201
 332:Core/Src/main.c ****   {
 601              		.loc 1 332 7 is_stmt 0 view .LVU202
 602 0038 0948     		ldr	r0, .L35
 603 003a 0021     		movs	r1, #0
 604 003c FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 605              	.LVL25:
 332:Core/Src/main.c ****   {
 606              		.loc 1 332 6 discriminator 1 view .LVU203
 607 0040 0028     		cmp	r0, #0
 608 0042 09D1     		bne	.L33
 336:Core/Src/main.c ****   {
 609              		.loc 1 336 3 is_stmt 1 view .LVU204
 336:Core/Src/main.c ****   {
 610              		.loc 1 336 7 is_stmt 0 view .LVU205
 611 0044 0648     		ldr	r0, .L35
 612 0046 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
ARM GAS  /tmp/cckfOX2c.s 			page 25


 613              	.LVL26:
 336:Core/Src/main.c ****   {
 614              		.loc 1 336 6 discriminator 1 view .LVU206
 615 004a 0028     		cmp	r0, #0
 616 004c 06D1     		bne	.L34
 344:Core/Src/main.c **** 
 617              		.loc 1 344 1 view .LVU207
 618              		@ sp needed
 619 004e 10BD     		pop	{r4, pc}
 620              	.L31:
 326:Core/Src/main.c ****   }
 621              		.loc 1 326 5 is_stmt 1 view .LVU208
 622 0050 FFF7FEFF 		bl	Error_Handler
 623              	.LVL27:
 624              	.L32:
 330:Core/Src/main.c ****   }
 625              		.loc 1 330 5 view .LVU209
 626 0054 FFF7FEFF 		bl	Error_Handler
 627              	.LVL28:
 628              	.L33:
 334:Core/Src/main.c ****   }
 629              		.loc 1 334 5 view .LVU210
 630 0058 FFF7FEFF 		bl	Error_Handler
 631              	.LVL29:
 632              	.L34:
 338:Core/Src/main.c ****   }
 633              		.loc 1 338 5 view .LVU211
 634 005c FFF7FEFF 		bl	Error_Handler
 635              	.LVL30:
 636              	.L36:
 637              		.align	2
 638              	.L35:
 639 0060 00000000 		.word	huart1
 640 0064 00380140 		.word	1073821696
 641              		.cfi_endproc
 642              	.LFE314:
 644              		.section	.text.SystemClock_Config,"ax",%progbits
 645              		.align	1
 646              		.global	SystemClock_Config
 647              		.syntax unified
 648              		.code	16
 649              		.thumb_func
 651              	SystemClock_Config:
 652              	.LFB311:
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 653              		.loc 1 140 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 72
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657 0000 10B5     		push	{r4, lr}
 658              	.LCFI7:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 4, -8
 661              		.cfi_offset 14, -4
 662 0002 92B0     		sub	sp, sp, #72
 663              	.LCFI8:
 664              		.cfi_def_cfa_offset 80
ARM GAS  /tmp/cckfOX2c.s 			page 26


 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 665              		.loc 1 141 3 view .LVU213
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 666              		.loc 1 141 22 is_stmt 0 view .LVU214
 667 0004 05AC     		add	r4, sp, #20
 668 0006 3422     		movs	r2, #52
 669 0008 0021     		movs	r1, #0
 670 000a 2000     		movs	r0, r4
 671 000c FFF7FEFF 		bl	memset
 672              	.LVL31:
 142:Core/Src/main.c **** 
 673              		.loc 1 142 3 is_stmt 1 view .LVU215
 142:Core/Src/main.c **** 
 674              		.loc 1 142 22 is_stmt 0 view .LVU216
 675 0010 1022     		movs	r2, #16
 676 0012 0021     		movs	r1, #0
 677 0014 01A8     		add	r0, sp, #4
 678 0016 FFF7FEFF 		bl	memset
 679              	.LVL32:
 146:Core/Src/main.c **** 
 680              		.loc 1 146 3 is_stmt 1 view .LVU217
 681 001a 8020     		movs	r0, #128
 682 001c 8000     		lsls	r0, r0, #2
 683 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 684              	.LVL33:
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 685              		.loc 1 151 3 view .LVU218
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 686              		.loc 1 151 36 is_stmt 0 view .LVU219
 687 0022 0123     		movs	r3, #1
 688 0024 0593     		str	r3, [sp, #20]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 689              		.loc 1 152 3 is_stmt 1 view .LVU220
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 690              		.loc 1 152 30 is_stmt 0 view .LVU221
 691 0026 8023     		movs	r3, #128
 692 0028 5B02     		lsls	r3, r3, #9
 693 002a 0693     		str	r3, [sp, #24]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 694              		.loc 1 153 3 is_stmt 1 view .LVU222
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 695              		.loc 1 153 34 is_stmt 0 view .LVU223
 696 002c 0223     		movs	r3, #2
 697 002e 0C93     		str	r3, [sp, #48]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 698              		.loc 1 154 3 is_stmt 1 view .LVU224
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV1;
 699              		.loc 1 154 35 is_stmt 0 view .LVU225
 700 0030 0133     		adds	r3, r3, #1
 701 0032 0D93     		str	r3, [sp, #52]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 702              		.loc 1 155 3 is_stmt 1 view .LVU226
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 8;
 703              		.loc 1 155 30 is_stmt 0 view .LVU227
 704 0034 0023     		movs	r3, #0
 705 0036 0E93     		str	r3, [sp, #56]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/cckfOX2c.s 			page 27


 706              		.loc 1 156 3 is_stmt 1 view .LVU228
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 707              		.loc 1 156 30 is_stmt 0 view .LVU229
 708 0038 0833     		adds	r3, r3, #8
 709 003a 0F93     		str	r3, [sp, #60]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 710              		.loc 1 157 3 is_stmt 1 view .LVU230
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 711              		.loc 1 157 30 is_stmt 0 view .LVU231
 712 003c 8023     		movs	r3, #128
 713 003e 9B02     		lsls	r3, r3, #10
 714 0040 1093     		str	r3, [sp, #64]
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 715              		.loc 1 158 3 is_stmt 1 view .LVU232
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 716              		.loc 1 158 30 is_stmt 0 view .LVU233
 717 0042 8023     		movs	r3, #128
 718 0044 9B05     		lsls	r3, r3, #22
 719 0046 1193     		str	r3, [sp, #68]
 159:Core/Src/main.c ****   {
 720              		.loc 1 159 3 is_stmt 1 view .LVU234
 159:Core/Src/main.c ****   {
 721              		.loc 1 159 7 is_stmt 0 view .LVU235
 722 0048 2000     		movs	r0, r4
 723 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 724              	.LVL34:
 159:Core/Src/main.c ****   {
 725              		.loc 1 159 6 discriminator 1 view .LVU236
 726 004e 0028     		cmp	r0, #0
 727 0050 0ED1     		bne	.L40
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 728              		.loc 1 166 3 is_stmt 1 view .LVU237
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 729              		.loc 1 166 31 is_stmt 0 view .LVU238
 730 0052 01A8     		add	r0, sp, #4
 731 0054 0723     		movs	r3, #7
 732 0056 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 733              		.loc 1 168 3 is_stmt 1 view .LVU239
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 734              		.loc 1 168 34 is_stmt 0 view .LVU240
 735 0058 053B     		subs	r3, r3, #5
 736 005a 4360     		str	r3, [r0, #4]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 737              		.loc 1 169 3 is_stmt 1 view .LVU241
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 738              		.loc 1 169 35 is_stmt 0 view .LVU242
 739 005c 0023     		movs	r3, #0
 740 005e 8360     		str	r3, [r0, #8]
 170:Core/Src/main.c **** 
 741              		.loc 1 170 3 is_stmt 1 view .LVU243
 170:Core/Src/main.c **** 
 742              		.loc 1 170 36 is_stmt 0 view .LVU244
 743 0060 C360     		str	r3, [r0, #12]
 172:Core/Src/main.c ****   {
 744              		.loc 1 172 3 is_stmt 1 view .LVU245
 172:Core/Src/main.c ****   {
ARM GAS  /tmp/cckfOX2c.s 			page 28


 745              		.loc 1 172 7 is_stmt 0 view .LVU246
 746 0062 0221     		movs	r1, #2
 747 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 748              	.LVL35:
 172:Core/Src/main.c ****   {
 749              		.loc 1 172 6 discriminator 1 view .LVU247
 750 0068 0028     		cmp	r0, #0
 751 006a 03D1     		bne	.L41
 176:Core/Src/main.c **** 
 752              		.loc 1 176 1 view .LVU248
 753 006c 12B0     		add	sp, sp, #72
 754              		@ sp needed
 755 006e 10BD     		pop	{r4, pc}
 756              	.L40:
 161:Core/Src/main.c ****   }
 757              		.loc 1 161 5 is_stmt 1 view .LVU249
 758 0070 FFF7FEFF 		bl	Error_Handler
 759              	.LVL36:
 760              	.L41:
 174:Core/Src/main.c ****   }
 761              		.loc 1 174 5 view .LVU250
 762 0074 FFF7FEFF 		bl	Error_Handler
 763              	.LVL37:
 764              		.cfi_endproc
 765              	.LFE311:
 767              		.section	.text.main,"ax",%progbits
 768              		.align	1
 769              		.global	main
 770              		.syntax unified
 771              		.code	16
 772              		.thumb_func
 774              	main:
 775              	.LFB310:
  72:Core/Src/main.c **** 
 776              		.loc 1 72 1 view -0
 777              		.cfi_startproc
 778              		@ Volatile: function does not return.
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781 0000 10B5     		push	{r4, lr}
 782              	.LCFI9:
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 4, -8
 785              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 786              		.loc 1 81 3 view .LVU252
 787 0002 FFF7FEFF 		bl	HAL_Init
 788              	.LVL38:
  88:Core/Src/main.c **** 
 789              		.loc 1 88 3 view .LVU253
 790 0006 FFF7FEFF 		bl	SystemClock_Config
 791              	.LVL39:
  95:Core/Src/main.c ****   MX_TIM1_Init();
 792              		.loc 1 95 3 view .LVU254
 793 000a FFF7FEFF 		bl	MX_GPIO_Init
 794              	.LVL40:
  96:Core/Src/main.c ****   MX_TIM3_Init();
ARM GAS  /tmp/cckfOX2c.s 			page 29


 795              		.loc 1 96 3 view .LVU255
 796 000e FFF7FEFF 		bl	MX_TIM1_Init
 797              	.LVL41:
  97:Core/Src/main.c ****   MX_USART1_UART_Init();
 798              		.loc 1 97 3 view .LVU256
 799 0012 FFF7FEFF 		bl	MX_TIM3_Init
 800              	.LVL42:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 801              		.loc 1 98 3 view .LVU257
 802 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 803              	.LVL43:
 106:Core/Src/main.c ****   heartbeat_off(&heartbeat_led);
 804              		.loc 1 106 3 view .LVU258
 805 001a FA21     		movs	r1, #250
 806 001c 074C     		ldr	r4, .L44
 807 001e 8900     		lsls	r1, r1, #2
 808 0020 2000     		movs	r0, r4
 809 0022 FFF7FEFF 		bl	heartbeat_initialize
 810              	.LVL44:
 107:Core/Src/main.c **** 
 811              		.loc 1 107 3 view .LVU259
 812 0026 2000     		movs	r0, r4
 813 0028 FFF7FEFF 		bl	heartbeat_off
 814              	.LVL45:
 815              	.L43:
 117:Core/Src/main.c ****   {
 816              		.loc 1 117 3 view .LVU260
 128:Core/Src/main.c **** 
 817              		.loc 1 128 5 discriminator 1 view .LVU261
 818 002c FFF7FEFF 		bl	HAL_GetTick
 819              	.LVL46:
 820 0030 0100     		movs	r1, r0
 821 0032 024B     		ldr	r3, .L44
 822 0034 1800     		movs	r0, r3
 823 0036 FFF7FEFF 		bl	heartbeat_toggle
 824              	.LVL47:
 117:Core/Src/main.c ****   {
 825              		.loc 1 117 9 view .LVU262
 826 003a F7E7     		b	.L43
 827              	.L45:
 828              		.align	2
 829              	.L44:
 830 003c 00000000 		.word	heartbeat_led
 831              		.cfi_endproc
 832              	.LFE310:
 834              		.section	.bss.heartbeat_led,"aw",%nobits
 835              		.align	2
 838              	heartbeat_led:
 839 0000 00000000 		.space	8
 839      00000000 
 840              		.global	huart1
 841              		.section	.bss.huart1,"aw",%nobits
 842              		.align	2
 845              	huart1:
 846 0000 00000000 		.space	148
 846      00000000 
 846      00000000 
ARM GAS  /tmp/cckfOX2c.s 			page 30


 846      00000000 
 846      00000000 
 847              		.global	htim3
 848              		.section	.bss.htim3,"aw",%nobits
 849              		.align	2
 852              	htim3:
 853 0000 00000000 		.space	76
 853      00000000 
 853      00000000 
 853      00000000 
 853      00000000 
 854              		.global	htim1
 855              		.section	.bss.htim1,"aw",%nobits
 856              		.align	2
 859              	htim1:
 860 0000 00000000 		.space	76
 860      00000000 
 860      00000000 
 860      00000000 
 860      00000000 
 861              		.text
 862              	.Letext0:
 863              		.file 3 "/home/achraf/Desktop/Toolchain/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-
 864              		.file 4 "/home/achraf/Desktop/Toolchain/arm-gnu-toolchain-14.3.rel1-x86_64-arm-none-eabi/arm-none-
 865              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 866              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 867              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 868              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 869              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 870              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 871              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 872              		.file 12 "Core/Inc/heartbeat.h"
 873              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 874              		.file 14 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 875              		.file 15 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 876              		.file 16 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim_ex.h"
 877              		.file 17 "Core/Inc/main.h"
 878              		.file 18 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 879              		.file 19 "<built-in>"
ARM GAS  /tmp/cckfOX2c.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cckfOX2c.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/cckfOX2c.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cckfOX2c.s:148    .text.MX_GPIO_Init:00000078 $d
     /tmp/cckfOX2c.s:154    .text.Error_Handler:00000000 $t
     /tmp/cckfOX2c.s:160    .text.Error_Handler:00000000 Error_Handler
     /tmp/cckfOX2c.s:192    .text.MX_TIM1_Init:00000000 $t
     /tmp/cckfOX2c.s:197    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/cckfOX2c.s:395    .text.MX_TIM1_Init:000000c0 $d
     /tmp/cckfOX2c.s:859    .bss.htim1:00000000 htim1
     /tmp/cckfOX2c.s:402    .text.MX_TIM3_Init:00000000 $t
     /tmp/cckfOX2c.s:407    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/cckfOX2c.s:522    .text.MX_TIM3_Init:00000070 $d
     /tmp/cckfOX2c.s:852    .bss.htim3:00000000 htim3
     /tmp/cckfOX2c.s:529    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/cckfOX2c.s:534    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/cckfOX2c.s:639    .text.MX_USART1_UART_Init:00000060 $d
     /tmp/cckfOX2c.s:845    .bss.huart1:00000000 huart1
     /tmp/cckfOX2c.s:645    .text.SystemClock_Config:00000000 $t
     /tmp/cckfOX2c.s:651    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cckfOX2c.s:768    .text.main:00000000 $t
     /tmp/cckfOX2c.s:774    .text.main:00000000 main
     /tmp/cckfOX2c.s:830    .text.main:0000003c $d
     /tmp/cckfOX2c.s:838    .bss.heartbeat_led:00000000 heartbeat_led
     /tmp/cckfOX2c.s:835    .bss.heartbeat_led:00000000 $d
     /tmp/cckfOX2c.s:842    .bss.huart1:00000000 $d
     /tmp/cckfOX2c.s:849    .bss.htim3:00000000 $d
     /tmp/cckfOX2c.s:856    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_IC_Init
HAL_TIM_IC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
heartbeat_initialize
heartbeat_off
HAL_GetTick
heartbeat_toggle
